#pragma once
namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto canTriggerParent = 0x48;
		constexpr auto prefabID = 0x4c;
		constexpr auto globalBroadcast = 0x50;
		constexpr auto net = 0x58;
		constexpr auto IsDestroyedk__BackingField = 0x60;
		constexpr auto _prefabName = 0x68;
		constexpr auto _prefabNameWithoutExtension = 0x70;

		constexpr auto get_JustCreated = 0xa52d70;
		constexpr auto set_JustCreated = 0xa52d90;
		constexpr auto ClientSpawn = 0xaff400;
		constexpr auto ClientOnEnable = 0xaff380;
		constexpr auto ClientInit = 0xaff190;
		constexpr auto OnNetworkUpdate = 0xb006b0;
		constexpr auto PreNetworkUpdate = 0x45c510;
		constexpr auto PostNetworkUpdate = 0x45c510;
		constexpr auto ShouldDestroyWithGroup = 0x5d6d00;
		constexpr auto ShouldDestroyImmediately = 0x599410;
		constexpr auto NetworkDestroy = 0xb00240;
		constexpr auto DoClientDestroy = 0xaff7d0;
		constexpr auto DoNetworkDestroy = 0x45c510;
		constexpr auto BroadcastOnPostNetworkUpdate = 0xafef70;
		constexpr auto PostProcess = 0xb00830;
		constexpr auto GetParentEntity = 0xaffb70;
		constexpr auto HasParent = 0xaffb80;
		constexpr auto AddChild = 0xafeee0;
		constexpr auto OnChildAdded = 0x45c510;
		constexpr auto RemoveChild = 0xb008b0;
		constexpr auto OnChildRemoved = 0x45c510;
		constexpr auto get_gameManager = 0xb00cf0;
		constexpr auto get_prefabAttribute = 0xb00d50;
		constexpr auto get_IsDestroyed = 0xb00bd0;
		constexpr auto set_IsDestroyed = 0x6dc740;
		constexpr auto get_PrefabName = 0xb00be0;
		constexpr auto get_ShortPrefabName = 0xb00c60;
		constexpr auto GetNetworkPosition = 0x9b8e10;
		constexpr auto GetNetworkRotation = 0xaffb30;
		constexpr auto InvokeString = 0xaffb90;
		constexpr auto LookupPrefab = 0xb001a0;
		constexpr auto EqualNetID = 0xaffae0;
		constexpr auto ResetState = 0xb00920;
		constexpr auto InitShared = 0x45c510;
		constexpr auto PreInitShared = 0x45c510;
		constexpr auto PostInitShared = 0x45c510;
		constexpr auto DestroyShared = 0x45c510;
		constexpr auto OnNetworkGroupEnter = 0x45c510;
		constexpr auto OnNetworkGroupLeave = 0x45c510;
		constexpr auto OnNetworkGroupChange = 0xb00570;
		constexpr auto OnNetworkSubscribersEnter = 0x45c510;
		constexpr auto OnNetworkSubscribersLeave = 0x45c510;
		constexpr auto EntityDestroy = 0xaff9f0;
		constexpr auto DoEntityDestroy = 0xaff890;
		constexpr auto SpawnShared = 0xb00970;
		constexpr auto Load = 0xaffde0;
		constexpr auto get_isServer = 0x599410;
		constexpr auto get_isClient = 0x5d6d00;
		constexpr auto OnRpcMessage = 0x599410;
		constexpr auto ctor = 0xb00b30;
		constexpr auto cctor = 0xb00a80;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x240;
		constexpr auto __menuOption_Drink = 0x298;
		constexpr auto __menuOption_InviteToTeam = 0x2f0;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x348;
		constexpr auto __menuOption_Menu_LootPlayer = 0x3a0;
		constexpr auto __menuOption_Promote = 0x3f8;
		constexpr auto __menuOption_SaltWater = 0x450;
		constexpr auto lastOpenSoundPlay = 0x4a8;
		constexpr auto currentViewMode = 0x4ac;
		constexpr auto selectedViewMode = 0x4b0;
		constexpr auto lastRevivePoint = 0x4b4;
		constexpr auto lastReviveDirection = 0x4c0;
		constexpr auto playerModel = 0x4d0;
		constexpr auto Frozen = 0x4d8;
		constexpr auto voiceRecorder = 0x4e0;
		constexpr auto voiceSpeaker = 0x4e8;
		constexpr auto input = 0x4f0;
		constexpr auto movement = 0x4f8;
		constexpr auto collision = 0x500;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x508;
		constexpr auto _lookingAtEntity = 0x510;
		constexpr auto _lookingAtCollider = 0x518;
		constexpr auto lookingAtPointk__BackingField = 0x520;
		constexpr auto wakeTime = 0x52c;
		constexpr auto needsClothesRebuild = 0x530;
		constexpr auto wasSleeping = 0x531;
		constexpr auto wokeUpBefore = 0x532;
		constexpr auto wasDead = 0x533;
		constexpr auto lastClothesHash = 0x534;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x538;
		constexpr auto GestureViewModel = 0x540;
		constexpr auto timeSinceUpdatedLookingAt = 0x548;
		constexpr auto nextTopologyTestTime = 0x54c;
		constexpr auto usePressTime = 0x550;
		constexpr auto useHeldTime = 0x554;
		constexpr auto lookingAtTest = 0x558;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x560;
		constexpr auto gestureList = 0x570;
		constexpr auto gestureFinishedTime = 0x578;
		constexpr auto blockHeldInputTimer = 0x57c;
		constexpr auto currentGesture = 0x580;
		constexpr auto disabledHeldEntity = 0x588;
		constexpr auto nextGestureMenuOpenTime = 0x590;
		constexpr auto lastGestureCancel = 0x594;
		constexpr auto client_lastHelloTime = 0x598;
		constexpr auto currentTeam = 0x5a0;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a8;
		constexpr auto lastReceivedTeamTime = 0x5b0;
		constexpr auto lastPresenceTeamId = 0x5b8;
		constexpr auto lastPresenceTeamSize = 0x5c0;
		constexpr auto playerGroupKey = 0x5c8;
		constexpr auto playerGroupSizeKey = 0x5d0;
		constexpr auto clActiveItem = 0x5d8;
		constexpr auto ClientCurrentMapNote = 0x5e0;
		constexpr auto ClientCurrentDeathNote = 0x5e8;
		constexpr auto missions = 0x5f0;
		constexpr auto _activeMission = 0x5f8;
		constexpr auto modelState = 0x600;
		constexpr auto mounted = 0x608;
		constexpr auto nextSeatSwapTime = 0x618;
		constexpr auto PetEntity = 0x620;
		constexpr auto lastPetCommandIssuedTime = 0x628;
		constexpr auto PetPrefabID = 0x62c;
		constexpr auto PetID = 0x630;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x634;
		constexpr auto cachedBuildingPrivilege = 0x638;
		constexpr auto maxProjectileID = 0x640;
		constexpr auto lastUpdateTime = 0x644;
		constexpr auto cachedThreatLevel = 0x648;
		constexpr auto serverTickRate = 0x64c;
		constexpr auto clientTickRate = 0x650;
		constexpr auto serverTickInterval = 0x654;
		constexpr auto clientTickInterval = 0x658;
		constexpr auto lastSentTickTime = 0x65c;
		constexpr auto lastTickStopwatch = 0x660;
		constexpr auto lastSentTick = 0x668;
		constexpr auto nextVisThink = 0x670;
		constexpr auto lastTimeSeen = 0x674;
		constexpr auto debugPrevVisible = 0x678;
		constexpr auto fallDamageEffect = 0x680;
		constexpr auto drownEffect = 0x688;
		constexpr auto playerFlags = 0x690;
		constexpr auto eyes = 0x698;
		constexpr auto inventory = 0x6a0;
		constexpr auto blueprints = 0x6a8;
		constexpr auto metabolism = 0x6b0;
		constexpr auto modifiers = 0x6b8;
		constexpr auto playerCollider = 0x6c0;
		constexpr auto Belt = 0x6c8;
		constexpr auto playerRigidbody = 0x6d0;
		constexpr auto userID = 0x6d8;
		constexpr auto UserIDString = 0x6e0;
		constexpr auto gamemodeteam = 0x6e8;
		constexpr auto reputation = 0x6ec;
		constexpr auto _displayName = 0x6f0;
		constexpr auto _lastSetName = 0x6f8;
		constexpr auto playerColliderStanding = 0x700;
		constexpr auto playerColliderDucked = 0x714;
		constexpr auto playerColliderCrawling = 0x728;
		constexpr auto playerColliderLyingDown = 0x73c;
		constexpr auto cachedProtection = 0x750;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x758;
		constexpr auto nextColliderRefreshTime = 0x75c;
		constexpr auto clothingBlocksAiming = 0x760;
		constexpr auto clothingMoveSpeedReduction = 0x764;
		constexpr auto clothingWaterSpeedBonus = 0x768;
		constexpr auto clothingAccuracyBonus = 0x76c;
		constexpr auto equippingBlocked = 0x770;
		constexpr auto eggVision = 0x774;
		constexpr auto activeTelephone = 0x778;
		constexpr auto designingAIEntity = 0x780;

		constexpr auto GetMenuOptions = 0x65a020;
		constexpr auto get_HasMenuOptions = 0x675280;
		constexpr auto OnRpcMessage = 0x662380;
		constexpr auto CanBeLooted = 0x64fb60;
		constexpr auto get_LootPanelTitle = 0x6757c0;
		constexpr auto Menu_LootPlayer = 0x661240;
		constexpr auto Menu_LootPlayer_ShowIf = 0x661220;
		constexpr auto RPC_OpenLootPanel = 0x66d250;
		constexpr auto PlayOpenSound = 0x66b5c0;
		constexpr auto InFirstPersonMode = 0x65cf40;
		constexpr auto UpdateViewMode = 0x673570;
		constexpr auto get_idealViewMode = 0x6759d0;
		constexpr auto get_shouldDrawBody = 0x675e30;
		constexpr auto OnViewModeChanged = 0x66b080;
		constexpr auto ModifyCamera = 0x6612b0;
		constexpr auto Menu_AssistPlayer = 0x6611e0;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x6611a0;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x660f10;
		constexpr auto get_lookingAt = 0x675de0;
		constexpr auto get_lookingAtEntity = 0x675d70;
		constexpr auto get_lookingAtCollider = 0x675d20;
		constexpr auto get_lookingAtPoint = 0x675dc0;
		constexpr auto set_lookingAtPoint = 0x676220;
		constexpr auto GetExtrapolationTime = 0x6592f0;
		constexpr auto GetLocalVelocityClient = 0x659e20;
		constexpr auto ClientInit = 0x651660;
		constexpr auto CreatePlayerModel = 0x656390;
		constexpr auto CreatePlayerCollision = 0x6561e0;
		constexpr auto CreatePlayerMovement = 0x6568b0;
		constexpr auto InitLocalPlayer = 0x65d080;
		constexpr auto InitRemotePlayer = 0x65d360;
		constexpr auto HasLocalControls = 0x65c5f0;
		constexpr auto SetNetworkPosition = 0x66ff80;
		constexpr auto SetNetworkRotation = 0x670030;
		constexpr auto DoClientDestroy = 0x656d70;
		constexpr auto PostNetworkUpdate = 0x66bd30;
		constexpr auto OnFirstWakeUp = 0x661ca0;
		constexpr auto get_TimeAwake = 0x675840;
		constexpr auto CL_ClothingChanged = 0x64f160;
		constexpr auto ForceRebuild = 0x6585a0;
		constexpr auto RebuildWorldModel = 0x66d6f0;
		constexpr auto SetDefaultFootstepEffects = 0x66f710;
		constexpr auto OnSignal = 0x66ab00;
		constexpr auto FindBone = 0x657a70;
		constexpr auto GetBones = 0x6587f0;
		constexpr auto ShouldLerp = 0x670840;
		constexpr auto get_VisiblePlayerList = 0x6758a0;
		constexpr auto ClearVisibility = 0x651190;
		constexpr auto RegisterForVisibility = 0x66de90;
		constexpr auto UnregisterFromVisibility = 0x6712d0;
		constexpr auto FindByID_Clientside = 0x657b70;
		constexpr auto Find_Clientside = 0x657d40;
		constexpr auto GetRandomFloatBasedOnUserID = 0x65be10;
		constexpr auto DisplayHealthInfo = 0x599410;
		constexpr auto ShouldDestroyWithGroup = 0x670810;
		constexpr auto SetInheritedVelocity = 0x66fbd0;
		constexpr auto GetPerformanceReport = 0x65bb50;
		constexpr auto GetPerformanceReport_Frametime = 0x65b6d0;
		constexpr auto OnBecameRagdoll = 0x6616d0;
		constexpr auto OnVoiceData = 0x66b580;
		constexpr auto RecieveAchievement = 0x66da60;
		constexpr auto CraftMode = 0x655f70;
		constexpr auto StartDesigningAI = 0x670b90;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x661a50;
		constexpr auto ClientOnEnable = 0x652610;
		constexpr auto Client_OnRepairFailedResources = 0x6549f0;
		constexpr auto TakeDamageHit = 0x670f30;
		constexpr auto AdminReceivedUGC = 0x64d710;
		constexpr auto AdminReceivedPatternFirework = 0x64d650;
		constexpr auto get_IsWearingDiveGoggles = 0x6757b0;
		constexpr auto set_IsWearingDiveGoggles = 0x676010;
		constexpr auto UpdateClothesIfNeeded = 0x671420;
		constexpr auto MakeVisible = 0x660c10;
		constexpr auto ClientUpdate_Sleeping = 0x653ad0;
		constexpr auto ClientUpdate = 0x653eb0;
		constexpr auto RebuildClothingItems = 0x66d4d0;
		constexpr auto UpdateClothingItems = 0x671910;
		constexpr auto UpdateHolsterOffsets = 0x672040;
		constexpr auto PostLateClientCycle = 0x66bc70;
		constexpr auto IsLocalPlayer = 0x65eda0;
		constexpr auto ClientUpdateLocalPlayer = 0x652770;
		constexpr auto UpdateTopologyStats = 0x673410;
		constexpr auto ClientTick = 0x6526c0;
		constexpr auto DoMovement = 0x657060;
		constexpr auto MountableOverrideViewAngles = 0x6613a0;
		constexpr auto BlockSprint = 0x64e680;
		constexpr auto BlockJump = 0x64e5e0;
		constexpr auto ClientInput = 0x651b60;
		constexpr auto UseAction = 0x6738d0;
		constexpr auto GetInteractionEntity = 0x659910;
		constexpr auto QuickUse = 0x66d0b0;
		constexpr auto LongUse = 0x660b50;
		constexpr auto UseStop = 0x673ba0;
		constexpr auto UpdateLookingAt = 0x6721d0;
		constexpr auto ResetLookingAt = 0x66e2e0;
		constexpr auto SetLookingAt = 0x66fd60;
		constexpr auto CheckLookingAtVisible = 0x650990;
		constexpr auto FindVehicleParentFor = 0x657c00;
		constexpr auto OnDied = 0x661bc0;
		constexpr auto OnRespawnInformation = 0x661fe0;
		constexpr auto RequestRespawnUpdates = 0x66e190;
		constexpr auto OnLand = 0x661df0;
		constexpr auto StartLoading = 0x670e10;
		constexpr auto StartLoading_Quick = 0x670d20;
		constexpr auto FinishLoading = 0x658040;
		constexpr auto FullBlack_FadeIn = 0x658680;
		constexpr auto FullBlack_FadeOut = 0x45c510;
		constexpr auto FinishedLoadingRoutine = 0x658270;
		constexpr auto DirectionalDamage = 0x656b50;
		constexpr auto UnlockedBlueprint = 0x671260;
		constexpr auto CheckForRespawnInfo = 0x650920;
		constexpr auto UpdateRichPresenceState = 0x673170;
		constexpr auto HandleCompanionPairingResult = 0x65c0f0;
		constexpr auto UpdateWaterDrinkingPoint = 0x6735b0;
		constexpr auto GetWaterDrinkingPoint = 0x65c0d0;
		constexpr auto Drink = 0x657300;
		constexpr auto Drink_ShowIf = 0x657120;
		constexpr auto SaltWater = 0x45c510;
		constexpr auto SaltWater_ShowIf = 0x66e460;
		constexpr auto Climb = 0x6556f0;
		constexpr auto Climb_ShowIf = 0x655420;
		constexpr auto HasPlayerFlag = 0x65c660;
		constexpr auto get_IsReceivingSnapshot = 0x6757a0;
		constexpr auto get_IsAdmin = 0x6756c0;
		constexpr auto get_IsDeveloper = 0x675770;
		constexpr auto get_IsAiming = 0x6756d0;
		constexpr auto get_IsFlying = 0x675780;
		constexpr auto get_IsConnected = 0x6756e0;
		constexpr auto get_InGesture = 0x675610;
		constexpr auto get_CurrentGestureBlocksMovement = 0x675160;
		constexpr auto get_CurrentGestureIsDance = 0x6751a0;
		constexpr auto get_CurrentGestureIsFullBody = 0x6751e0;
		constexpr auto get_InGestureCancelCooldown = 0x6755e0;
		constexpr auto SetGestureMenuOpen = 0x66f7d0;
		constexpr auto RequestStartGesture = 0x66e230;
		constexpr auto Client_StartGesture = 0x654f50;
		constexpr auto ProcessDanceAction = 0x66c420;
		constexpr auto SayingHello = 0x66e7b0;
		constexpr auto ProcessGestureStart = 0x66c930;
		constexpr auto EndGesture = 0x657620;
		constexpr auto EndLocalGesture = 0x6576c0;
		constexpr auto EndGestureShared = 0x6574b0;
		constexpr auto HideHeldEntity = 0x65cdd0;
		constexpr auto CancelGesture = 0x650640;
		constexpr auto RemoteGestureCancel = 0x66df80;
		constexpr auto CancelGestureInput = 0x650220;
		constexpr auto ClearGestureCooldown = 0x651040;
		constexpr auto ConVarRequestStartGesture = 0x655d00;
		constexpr auto Client_RemoteCancelledGesture = 0x654f00;
		constexpr auto IsGestureBlocked = 0x65e5e0;
		constexpr auto get_clientTeamLifetime = 0x675910;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x64ec90;
		constexpr auto UpdateSteamGroup = 0x6731c0;
		constexpr auto ClearSteamGroup = 0x651070;
		constexpr auto CLIENT_ClearTeam = 0x64e720;
		constexpr auto CLIENT_PendingInvite = 0x64e8c0;
		constexpr auto InviteToTeam = 0x65d3d0;
		constexpr auto Promote = 0x66cf20;
		constexpr auto Menu_Promote_Start = 0x45c510;
		constexpr auto Promote_ShowIf = 0x66cb50;
		constexpr auto LocalPlayerIsLeader = 0x660660;
		constexpr auto Invite_ShowIf = 0x65d920;
		constexpr auto GetHeldEntity = 0x6593e0;
		constexpr auto GetHeldItem = 0x659620;
		constexpr auto GetHeldItemID = 0x6595d0;
		constexpr auto HeldEntityViewAngles = 0x65cbb0;
		constexpr auto HeldEntityFrame = 0x65c740;
		constexpr auto HeldEntityInput = 0x65c910;
		constexpr auto HeldItemUse = 0x65ccd0;
		constexpr auto HeldEntityStart = 0x65cae0;
		constexpr auto HeldEntityEnd = 0x65c670;
		constexpr auto IsHostileItem = 0x65e9b0;
		constexpr auto IsItemHoldRestricted = 0x65eb10;
		constexpr auto MapInfoOnEnable = 0x660cc0;
		constexpr auto Client_ReceiveMarkers = 0x654bc0;
		constexpr auto Client_UpdateDeathMarker = 0x6552f0;
		constexpr auto Client_AddNewDeathMarker = 0x6548b0;
		constexpr auto AddPointOfInterest = 0x64d570;
		constexpr auto ClearAllPointsOfInterest = 0x650ef0;
		constexpr auto ClearAllMapMarkers = 0x650d90;
		constexpr auto HasAttemptedMission = 0x65c1a0;
		constexpr auto CanAcceptMission = 0x64f4a0;
		constexpr auto IsMissionActive = 0x65ee80;
		constexpr auto HasCompletedMission = 0x65c310;
		constexpr auto HasFailedMission = 0x65c480;
		constexpr auto SetActiveMission = 0x66f6f0;
		constexpr auto GetActiveMission = 0x6587e0;
		constexpr auto HasActiveMission = 0x65c190;
		constexpr auto LoadMissions = 0x65fc40;
		constexpr auto OnModelState = 0x661f50;
		constexpr auto OnModelStateChanged = 0x661eb0;
		constexpr auto get_isMounted = 0x675c20;
		constexpr auto get_isMountingHidingWeapon = 0x675c50;
		constexpr auto GetMounted = 0x65b190;
		constexpr auto GetMountedVehicle = 0x65b140;
		constexpr auto MarkSwapSeat = 0x660d10;
		constexpr auto SwapSeatCooldown = 0x670f00;
		constexpr auto ClientUpdateMounted = 0x653590;
		constexpr auto CLIENT_SetPetPrefabID = 0x64f090;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x64eee0;
		constexpr auto LinkPet = 0x65faf0;
		constexpr auto SetPetMenuOpen = 0x670140;
		constexpr auto ClientIssuePetCommand = 0x652520;
		constexpr auto IsSleeping = 0x65f160;
		constexpr auto IsSpectating = 0x65f170;
		constexpr auto IsRelaxed = 0x65f090;
		constexpr auto IsServerFalling = 0x65f150;
		constexpr auto GetBuildingPrivilege = 0x658c00;
		constexpr auto CanBuild = 0x64fe30;
		constexpr auto IsBuildingBlocked = 0x65e370;
		constexpr auto IsBuildingAuthed = 0x65df30;
		constexpr auto CanPlaceBuildingPrivilege = 0x64ffc0;
		constexpr auto NewProjectileID = 0x661430;
		constexpr auto NewProjectileSeed = 0x661440;
		constexpr auto SendProjectileAttack = 0x66f440;
		constexpr auto SendProjectileRicochet = 0x66f490;
		constexpr auto SendProjectileUpdate = 0x66f4e0;
		constexpr auto Load = 0x660200;
		constexpr auto SpectatedPlayerHeadshot = 0x670b00;
		constexpr auto GetThreatLevel = 0x65c0b0;
		constexpr auto EnsureUpdated = 0x6577e0;
		constexpr auto SetHostileLength = 0x66fb20;
		constexpr auto SetWeaponDrawnDuration = 0x670770;
		constexpr auto ModifyInputState = 0x45c510;
		constexpr auto ForcePositionToParentOffset = 0x6582e0;
		constexpr auto UpdateClientTickRate = 0x6713c0;
		constexpr auto ForcePositionTo = 0x658410;
		constexpr auto ForceViewAnglesTo = 0x6585b0;
		constexpr auto SendVoiceData = 0x66f530;
		constexpr auto SendClientTick = 0x66ed50;
		constexpr auto NotifyUnderwearChange = 0x6614a0;
		constexpr auto UpdatePlayerVisibilities = 0x672e70;
		constexpr auto TimeSinceSeen = 0x671060;
		constexpr auto SetNextVisThink = 0x670110;
		constexpr auto WantsVisUpdate = 0x6746e0;
		constexpr auto IsAimingAt = 0x65db60;
		constexpr auto UpdateCullingSpheres = 0x671d70;
		constexpr auto VisUpdateUsingCulling = 0x673d20;
		constexpr auto VisUpdateUsingRays = 0x673e30;
		constexpr auto LogDebugCull = 0x660810;
		constexpr auto OnVisibilityChanged = 0x66b280;
		constexpr auto VisUpdate = 0x674250;
		constexpr auto VisPlayerArmed = 0x673c60;
		constexpr auto AnyPartVisible = 0x64d9e0;
		constexpr auto CalcVisUpdateRate = 0x64f360;
		constexpr auto PointSeePoint = 0x66b9a0;
		constexpr auto IsWounded = 0x65f450;
		constexpr auto IsCrawling = 0x65e420;
		constexpr auto IsIncapacitated = 0x65eb00;
		constexpr auto ToPlayer = 0x671080;
		constexpr auto get_Connection = 0x675150;
		constexpr auto get_displayName = 0x675960;
		constexpr auto set_displayName = 0x676020;
		constexpr auto SanitizePlayerNameString = 0x66e630;
		constexpr auto IsGod = 0x65e8e0;
		constexpr auto GetNetworkRotation = 0x65b230;
		constexpr auto CanInteract = 0x64ff60;
		constexpr auto StartHealth = 0x670d00;
		constexpr auto StartMaxHealth = 0x66b5b0;
		constexpr auto MaxHealth = 0x660d50;
		constexpr auto MaxVelocity = 0x660e00;
		constexpr auto WorldSpaceBounds = 0x674bc0;
		constexpr auto GetMountVelocity = 0x65b070;
		constexpr auto GetInheritedProjectileVelocity = 0x659710;
		constexpr auto GetInheritedThrowVelocity = 0x659810;
		constexpr auto GetInheritedDropVelocity = 0x659650;
		constexpr auto PreInitShared = 0x66bfb0;
		constexpr auto DestroyShared = 0x656ad0;
		constexpr auto InSafeZone = 0x65cf60;
		constexpr auto LateClientCycle = 0x65f460;
		constexpr auto ClientCycle = 0x651350;
		constexpr auto GetBounds = 0x658880;
		constexpr auto GetCenter = 0x658cd0;
		constexpr auto GetOffset = 0x65b350;
		constexpr auto GetSize = 0x65bf10;
		constexpr auto GetHeight = 0x6593c0;
		constexpr auto GetRadius = 0x65be00;
		constexpr auto GetJumpHeight = 0x659e10;
		constexpr auto TriggerPoint = 0x671160;
		constexpr auto NoClipOffset = 0x661450;
		constexpr auto NoClipRadius = 0x661490;
		constexpr auto MaxDeployDistance = 0x660d40;
		constexpr auto ClientUpdatePersistantData = 0x653aa0;
		constexpr auto GetMinSpeed = 0x65b040;
		constexpr auto GetMaxSpeed = 0x659ff0;
		constexpr auto GetSpeed = 0x65bf70;
		constexpr auto OnAttacked = 0x6614e0;
		constexpr auto EnablePlayerCollider = 0x657450;
		constexpr auto DisablePlayerCollider = 0x656d10;
		constexpr auto RefreshColliderSize = 0x66db80;
		constexpr auto SetPlayerRigidbodyState = 0x670750;
		constexpr auto AddPlayerRigidbody = 0x64d3f0;
		constexpr auto RemovePlayerRigidbody = 0x66e060;
		constexpr auto IsEnsnared = 0x65e4f0;
		constexpr auto IsAttacking = 0x65dd30;
		constexpr auto CanAttack = 0x64f910;
		constexpr auto OnLadder = 0x661d50;
		constexpr auto IsSwimming = 0x65f400;
		constexpr auto IsHeadUnderwater = 0x65e960;
		constexpr auto IsOnGround = 0x65eff0;
		constexpr auto IsRunning = 0x65f0a0;
		constexpr auto IsDucked = 0x65e440;
		constexpr auto RecentlyTeleported = 0x66d9d0;
		constexpr auto ShowToast = 0x6708a0;
		constexpr auto ChatMessage = 0x650710;
		constexpr auto ConsoleMessage = 0x655eb0;
		constexpr auto PenetrationResistance = 0x66b5b0;
		constexpr auto ScaleDamage = 0x66eac0;
		constexpr auto UpdateMoveSpeedFromClothing = 0x672aa0;
		constexpr auto UpdateProtectionFromClothing = 0x673050;
		constexpr auto Categorize = 0x6506e0;
		constexpr auto ToString = 0x671090;
		constexpr auto GetDebugStatus = 0x658f60;
		constexpr auto GetItem = 0x659d60;
		constexpr auto get_Traits = 0x675880;
		constexpr auto WaterFactor = 0x674700;
		constexpr auto AirFactor = 0x64d930;
		constexpr auto GetOxygenTime = 0x65b3a0;
		constexpr auto ShouldInheritNetworkGroup = 0x65f170;
		constexpr auto AnyPlayersVisibleToEntity = 0x64e020;
		constexpr auto IsStandingOnEntity = 0x65f180;
		constexpr auto SetActiveTelephone = 0x66f700;
		constexpr auto get_HasActiveTelephone = 0x675220;
		constexpr auto get_IsDesigningAI = 0x675710;
		constexpr auto ClearDesigningAIEntity = 0x651020;
		constexpr auto ctor = 0x674fa0;
		constexpr auto cctor = 0x674e50;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x598740;
		constexpr auto set_Owner = 0x598770;
		constexpr auto get_InheritedVelocity = 0x842a60;
		constexpr auto set_InheritedVelocity = 0x5b41b0;
		constexpr auto get_TargetMovement = 0xafec00;
		constexpr auto set_TargetMovement = 0x5b41a0;
		constexpr auto get_Running = 0x61b9a0;
		constexpr auto set_Running = 0x61b9b0;
		constexpr auto get_Ducking = 0x948120;
		constexpr auto set_Ducking = 0x9a5ef0;
		constexpr auto get_Crawling = 0x6daf10;
		constexpr auto set_Crawling = 0x6daf20;
		constexpr auto get_Grounded = 0x5b4170;
		constexpr auto set_Grounded = 0x5b41d0;
		constexpr auto get_IsRunning = 0xafebc0;
		constexpr auto get_IsDucked = 0xafeba0;
		constexpr auto get_IsCrawling = 0xafeb90;
		constexpr auto get_IsGrounded = 0xafebb0;
		constexpr auto CurrentVelocity = 0xafe910;
		constexpr auto CurrentMoveSpeed = 0x5ed100;
		constexpr auto GetCollider = 0x5ed110;
		constexpr auto Init = 0x598770;
		constexpr auto BlockJump = 0x45c510;
		constexpr auto BlockSprint = 0x45c510;
		constexpr auto get_RecentlyTeleported = 0xafebd0;
		constexpr auto ClientInput = 0x45c510;
		constexpr auto DoFixedUpdate = 0x45c510;
		constexpr auto FrameUpdate = 0xafea00;
		constexpr auto TeleportTo = 0xafeaf0;
		constexpr auto Push = 0x45c510;
		constexpr auto SetParent = 0x45c510;
		constexpr auto FixedUpdate = 0xafe980;
		constexpr auto PlayerAttemptedMount = 0x45c510;
		constexpr auto PlayerCompletedMount = 0x45c510;
		constexpr auto ctor = 0x6e0cf0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x280;
		constexpr auto damageScale = 0x284;
		constexpr auto distanceScale = 0x288;
		constexpr auto projectileVelocityScale = 0x28c;
		constexpr auto automatic = 0x290;
		constexpr auto usableByTurret = 0x291;
		constexpr auto turretDamageScale = 0x294;
		constexpr auto attackFX = 0x298;
		constexpr auto silencedAttack = 0x2a0;
		constexpr auto muzzleBrakeAttack = 0x2a8;
		constexpr auto MuzzlePoint = 0x2b0;
		constexpr auto reloadTime = 0x2b8;
		constexpr auto canUnloadAmmo = 0x2bc;
		constexpr auto primaryMagazine = 0x2c0;
		constexpr auto fractionalReload = 0x2c8;
		constexpr auto reloadStartDuration = 0x2cc;
		constexpr auto reloadFractionDuration = 0x2d0;
		constexpr auto reloadEndDuration = 0x2d4;
		constexpr auto aimSway = 0x2d8;
		constexpr auto aimSwaySpeed = 0x2dc;
		constexpr auto recoil = 0x2e0;
		constexpr auto aimconeCurve = 0x2e8;
		constexpr auto aimCone = 0x2f0;
		constexpr auto hipAimCone = 0x2f4;
		constexpr auto aimconePenaltyPerShot = 0x2f8;
		constexpr auto aimConePenaltyMax = 0x2fc;
		constexpr auto aimconePenaltyRecoverTime = 0x300;
		constexpr auto aimconePenaltyRecoverDelay = 0x304;
		constexpr auto stancePenaltyScale = 0x308;
		constexpr auto hasADS = 0x30c;
		constexpr auto noAimingWhileCycling = 0x30d;
		constexpr auto manualCycle = 0x30e;
		constexpr auto needsCycle = 0x30f;
		constexpr auto isCycling = 0x310;
		constexpr auto aiming = 0x311;
		constexpr auto resetDuration = 0x314;
		constexpr auto numShotsFired = 0x318;
		constexpr auto nextReloadTime = 0x31c;
		constexpr auto startReloadTime = 0x320;
		constexpr auto stancePenalty = 0x324;
		constexpr auto aimconePenalty = 0x328;
		constexpr auto cachedModHash = 0x32c;
		constexpr auto sightAimConeScale = 0x330;
		constexpr auto sightAimConeOffset = 0x334;
		constexpr auto hipAimConeScale = 0x338;
		constexpr auto hipAimConeOffset = 0x33c;
		constexpr auto isReloading = 0x340;
		constexpr auto swaySampleTime = 0x344;
		constexpr auto lastShotTime = 0x348;
		constexpr auto reloadPressTime = 0x34c;
		constexpr auto ammoTypePreReload = 0x350;
		constexpr auto fractionalReloadDesiredCount = 0x358;
		constexpr auto fractionalReloadNumAdded = 0x35c;
		constexpr auto triggerReady = 0x360;
		constexpr auto nextHeightCheckTime = 0x364;
		constexpr auto cachedUnderground = 0x368;
		constexpr auto createdProjectiles = 0x370;

		constexpr auto OnRpcMessage = 0xa19390;
		constexpr auto get_recoilProperties = 0xa1aef0;
		constexpr auto GetInheritedVelocity = 0xa16970;
		constexpr auto GetDamageScale = 0xa16950;
		constexpr auto GetDistanceScale = 0xa16960;
		constexpr auto GetProjectileVelocityScale = 0xa17160;
		constexpr auto StartReloadCooldown = 0xa1ab70;
		constexpr auto ResetReloadCooldown = 0xa19f90;
		constexpr auto HasReloadCooldown = 0xa17880;
		constexpr auto GetReloadCooldown = 0xa17180;
		constexpr auto GetReloadIdle = 0xa172e0;
		constexpr auto OnDrawGizmos = 0xa18bd0;
		constexpr auto GetRecoil = 0xa17170;
		constexpr auto get_isSemiAuto = 0xa1aee0;
		constexpr auto GetAimCone = 0xa15e40;
		constexpr auto ScaleRepeatDelay = 0xa19fa0;
		constexpr auto GetProjectileModifier = 0xa16b20;
		constexpr auto DidAttackClientside = 0xa14330;
		constexpr auto GetItemOptions = 0xa169d0;
		constexpr auto ClientIsReloading = 0xa14050;
		constexpr auto NotifySpectatorReloading = 0xa18b80;
		constexpr auto EditViewAngles = 0xa15440;
		constexpr auto OnFrame = 0xa18fa0;
		constexpr auto ShotFired = 0xa1a2d0;
		constexpr auto SimulateAimcone = 0xa1a330;
		constexpr auto CanAttack = 0xa13e50;
		constexpr auto CanAim = 0xa13e20;
		constexpr auto OnInput = 0xa18fb0;
		constexpr auto ReadyToAim = 0xa19ee0;
		constexpr auto ReadyToFire = 0xa19f30;
		constexpr auto AmmoTypeClicked = 0xa13d00;
		constexpr auto AddAmmoOption = 0xa13b50;
		constexpr auto GetReloadMenu = 0xa17360;
		constexpr auto PredictAmmoType = 0xa19b40;
		constexpr auto HasMoreThanOneAmmoType = 0xa175d0;
		constexpr auto OnDeploy = 0xa18b90;
		constexpr auto DoReload = 0xa14ec0;
		constexpr auto InsertAmmoFraction = 0xa178b0;
		constexpr auto CancelFractionalReloading = 0xa13e70;
		constexpr auto ClientFinishFractionalReload = 0xa13f10;
		constexpr auto ClientSingleReload = 0xa14060;
		constexpr auto DoAttack = 0xa14400;
		constexpr auto BeginCycle = 0xa13d90;
		constexpr auto LaunchProjectile = 0xa18990;
		constexpr auto DryFire = 0xa15380;
		constexpr auto ProcessSpectatorViewmodel = 0xa19e80;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa19d70;
		constexpr auto GetReloadDuration = 0xa17200;
		constexpr auto GetAvailableAmmo = 0xa16740;
		constexpr auto IsSilenced = 0xa17910;
		constexpr auto FiredUnderground = 0xa15db0;
		constexpr auto OnSignal = 0xa19480;
		constexpr auto LaunchProjectileClientside = 0xa17af0;
		constexpr auto CreateProjectile = 0xa141a0;
		constexpr auto UpdateAmmoDisplay = 0xa1abc0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x599410;
		constexpr auto Load = 0xa18ae0;
		constexpr auto ctor = 0xa1ac70;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0xa68b60;
		constexpr auto GetCollider = 0x843030;
		constexpr auto OnDisable = 0xa6da60;
		constexpr auto Init = 0xa6b290;
		constexpr auto OnCollisionEnter = 0xa6d8a0;
		constexpr auto OnCollisionStay = 0xa6d980;
		constexpr auto GroundCheck = 0xa6aa50;
		constexpr auto TeleportTo = 0xa6e110;
		constexpr auto UpdateCurrentLadder = 0xa6e440;
		constexpr auto WantsSprint = 0xa6f4b0;
		constexpr auto ClientInput = 0xa68e50;
		constexpr auto Movement_Water = 0xa6ccf0;
		constexpr auto Movement_Mounted = 0xa6bdd0;
		constexpr auto Movement_Ladder = 0xa6b780;
		constexpr auto Movement_Noclip = 0xa6bee0;
		constexpr auto Movement_Walking = 0xa6c470;
		constexpr auto GetHeldEntityMovementMultiplier = 0xa6a9a0;
		constexpr auto HandleGrounded = 0xa6ad20;
		constexpr auto HandleRunDuckCrawl = 0xa6aea0;
		constexpr auto GetForcedDuck = 0xa6a8b0;
		constexpr auto HandleJumping = 0xa6ad70;
		constexpr auto CanJump = 0xa68cd0;
		constexpr auto BlockJump = 0xa68c40;
		constexpr auto BlockSprint = 0xa68c80;
		constexpr auto SetKinematic = 0xa6dee0;
		constexpr auto ApplyForce = 0xa68b20;
		constexpr auto CanSprint = 0xa68de0;
		constexpr auto Jump = 0xa6b460;
		constexpr auto DoFixedUpdate = 0xa69200;
		constexpr auto DoStepUp = 0xa69a30;
		constexpr auto UpdateVelocity = 0xa6e960;
		constexpr auto UpdateGravity = 0xa6e610;
		constexpr auto FrameUpdate = 0xa6a400;
		constexpr auto TransformState = 0xa6e230;
		constexpr auto SetParent = 0xa6df10;
		constexpr auto FallVelocity = 0xa6a350;
		constexpr auto CurrentVelocity = 0xa691c0;
		constexpr auto CurrentMoveSpeed = 0xa69170;
		constexpr auto PlayerAttemptedMount = 0xa6de80;
		constexpr auto PlayerCompletedMount = 0xa6deb0;
		constexpr auto ctor = 0xa6f540;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1cd10b0;
		constexpr auto set_color = 0x1cd1650;
		constexpr auto get_backgroundColor = 0x1cd0f60;
		constexpr auto set_backgroundColor = 0x1cd1560;
		constexpr auto get_contentColor = 0x1cd1170;
		constexpr auto set_contentColor = 0x1cd1700;
		constexpr auto get_changed = 0x1cd1040;
		constexpr auto set_changed = 0x1cd15d0;
		constexpr auto get_enabled = 0x1cd11f0;
		constexpr auto set_enabled = 0x1cd1770;
		constexpr auto get_usePageScrollbars = 0x1cd14f0;
		constexpr auto get_blendMaterial = 0x1cd0fe0;
		constexpr auto get_blitMaterial = 0x1cd1010;
		constexpr auto get_roundedRectMaterial = 0x1cd1310;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1cd1340;
		constexpr auto GrabMouseControl = 0x1ccf0b0;
		constexpr auto HasMouseControl = 0x1ccfea0;
		constexpr auto ReleaseMouseControl = 0x1cd05b0;
		constexpr auto SetNextControlName = 0x1cd0840;
		constexpr auto InternalRepaintEditorWindow = 0x1cd01c0;
		constexpr auto cctor = 0x1cd0ca0;
		constexpr auto get_scrollTroughSide = 0x1cd1370;
		constexpr auto set_scrollTroughSide = 0x1cd18d0;
		constexpr auto get_nextScrollStepTime = 0x1cd12b0;
		constexpr auto set_nextScrollStepTime = 0x1cd1810;
		constexpr auto set_skin = 0x1cd1990;
		constexpr auto get_skin = 0x1cd1490;
		constexpr auto DoSetSkin = 0x1ccd530;
		constexpr auto get_matrix = 0x1cd1220;
		constexpr auto set_matrix = 0x1cd17b0;
		constexpr auto Label = 0x1cd02e0;
		constexpr auto DrawTexture = 0x1cce6c0;
		constexpr auto CalculateScaledTextureRects = 0x1ccb880;
		constexpr auto Box = 0x1ccac70;
		constexpr auto Button = 0x1ccad30;
		constexpr auto PasswordFieldGetStrToShow = 0x1cd0480;
		constexpr auto DoTextField = 0x1ccd9b0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1ccf8e0;
		constexpr auto HandleTextFieldEventForDesktop = 0x1ccf0f0;
		constexpr auto Toggle = 0x1cd0ae0;
		constexpr auto SelectionGrid = 0x1cd06e0;
		constexpr auto CalcTotalHorizSpacing = 0x1ccb670;
		constexpr auto DoControl = 0x1ccce60;
		constexpr auto DoLabel = 0x1ccd2a0;
		constexpr auto DoToggle = 0x1ccdb70;
		constexpr auto DoButton = 0x1cccd30;
		constexpr auto DoButtonGrid = 0x1ccc040;
		constexpr auto CalcMouseRects = 0x1ccb150;
		constexpr auto HorizontalSlider = 0x1ccffb0;
		constexpr auto Slider = 0x1cd0880;
		constexpr auto BeginGroup = 0x1cca650;
		constexpr auto EndGroup = 0x1ccf070;
		constexpr auto get_scrollViewStates = 0x1cd1430;
		constexpr auto CallWindowDelegate = 0x1ccbbb0;
		constexpr auto get_color_Injected = 0x1cd1070;
		constexpr auto set_color_Injected = 0x1cd1610;
		constexpr auto get_backgroundColor_Injected = 0x1cd0f20;
		constexpr auto set_backgroundColor_Injected = 0x1cd1520;
		constexpr auto get_contentColor_Injected = 0x1cd1130;
		constexpr auto set_contentColor_Injected = 0x1cd16c0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1cc81b0;
		constexpr auto set_rawName = 0x1cc8580;
		constexpr auto get_font = 0x1cc7ca0;
		constexpr auto get_imagePosition = 0x1cc7ce0;
		constexpr auto set_alignment = 0x1cc8420;
		constexpr auto get_wordWrap = 0x1cc8270;
		constexpr auto get_contentOffset = 0x1cc7bd0;
		constexpr auto set_contentOffset = 0x1cc84b0;
		constexpr auto get_fixedWidth = 0x1cc7c60;
		constexpr auto get_fixedHeight = 0x1cc7c20;
		constexpr auto get_stretchWidth = 0x1cc8230;
		constexpr auto set_stretchWidth = 0x1cc8620;
		constexpr auto get_stretchHeight = 0x1cc81f0;
		constexpr auto set_stretchHeight = 0x1cc85d0;
		constexpr auto set_fontSize = 0x1cc84f0;
		constexpr auto set_Internal_clipOffset = 0x1cc83e0;
		constexpr auto Internal_Create = 0x1cc6fe0;
		constexpr auto Internal_Copy = 0x1cc6f90;
		constexpr auto Internal_Destroy = 0x1cc7020;
		constexpr auto GetStyleStatePtr = 0x1cc6dc0;
		constexpr auto GetRectOffsetPtr = 0x1cc6d80;
		constexpr auto Internal_GetLineHeight = 0x1cc76b0;
		constexpr auto Internal_Draw = 0x1cc7430;
		constexpr auto Internal_Draw2 = 0x1cc70d0;
		constexpr auto Internal_DrawCursor = 0x1cc71b0;
		constexpr auto Internal_DrawWithTextSelection = 0x1cc72d0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1cc7560;
		constexpr auto Internal_GetCursorStringIndex = 0x1cc7650;
		constexpr auto Internal_GetSelectedRenderedText = 0x1cc7760;
		constexpr auto Internal_CalcSize = 0x1cc5cd0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1cc5c70;
		constexpr auto Internal_CalcHeight = 0x1cc5b90;
		constexpr auto Internal_CalcMinMaxWidth = 0x1cc6e60;
		constexpr auto SetMouseTooltip = 0x1cc7860;
		constexpr auto Internal_GetCursorFlashOffset = 0x1cc74c0;
		constexpr auto SetDefaultFont = 0x1cc77d0;
		constexpr auto ctor = 0x1cc7b00;
		constexpr auto Finalize = 0x1cc6ba0;
		constexpr auto get_name = 0x1cc7f20;
		constexpr auto set_name = 0x1cc8530;
		constexpr auto get_normal = 0x1cc8040;
		constexpr auto get_margin = 0x1cc7e70;
		constexpr auto get_padding = 0x1cc8100;
		constexpr auto get_lineHeight = 0x1cc7dc0;
		constexpr auto Draw = 0x1cc6970;
		constexpr auto DrawCursor = 0x1cc5d30;
		constexpr auto DrawWithTextSelection = 0x1cc61f0;
		constexpr auto op_Implicit = 0x1cc82b0;
		constexpr auto get_none = 0x1cc7f80;
		constexpr auto GetCursorPixelPosition = 0x1cc6ca0;
		constexpr auto GetCursorStringIndex = 0x1cc6d20;
		constexpr auto CalcSize = 0x1cc5cd0;
		constexpr auto CalcSizeWithConstraints = 0x1cc5c70;
		constexpr auto CalcHeight = 0x1cc5b90;
		constexpr auto get_isHeightDependantOnWidth = 0x1cc7d20;
		constexpr auto CalcMinMaxWidth = 0x1cc5bf0;
		constexpr auto ToString = 0x1cc78e0;
		constexpr auto cctor = 0x1cc79f0;
		constexpr auto get_contentOffset_Injected = 0x1cc7b80;
		constexpr auto set_contentOffset_Injected = 0x1cc8460;
		constexpr auto set_Internal_clipOffset_Injected = 0x1cc8390;
		constexpr auto Internal_Draw_Injected = 0x1cc73a0;
		constexpr auto Internal_Draw2_Injected = 0x1cc7060;
		constexpr auto Internal_DrawCursor_Injected = 0x1cc7140;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1cc7220;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1cc74f0;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1cc75e0;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1cc76f0;
		constexpr auto Internal_CalcSize_Injected = 0x1cc6f30;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1cc6ec0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1cc6e00;
		constexpr auto SetMouseTooltip_Injected = 0x1cc7810;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1cb78d0;
		constexpr auto get_mousePosition = 0x1cb7800;
		constexpr auto set_mousePosition = 0x1cb7be0;
		constexpr auto get_delta = 0x1cb7580;
		constexpr auto get_pointerType = 0x1cb7850;
		constexpr auto get_button = 0x1cb7370;
		constexpr auto get_modifiers = 0x1cb7770;
		constexpr auto set_modifiers = 0x1cb7b50;
		constexpr auto get_pressure = 0x1cb7890;
		constexpr auto get_clickCount = 0x1cb73f0;
		constexpr auto get_character = 0x1cb73b0;
		constexpr auto set_character = 0x1cb7990;
		constexpr auto get_keyCode = 0x1cb7730;
		constexpr auto set_keyCode = 0x1cb7b10;
		constexpr auto get_displayIndex = 0x1cb75d0;
		constexpr auto set_displayIndex = 0x1cb7ad0;
		constexpr auto get_type = 0x1cb7950;
		constexpr auto set_type = 0x1cb7c20;
		constexpr auto get_commandName = 0x1cb7430;
		constexpr auto set_commandName = 0x1cb79e0;
		constexpr auto Internal_Use = 0x1cb5250;
		constexpr auto Internal_Create = 0x1cb5050;
		constexpr auto Internal_Destroy = 0x1cb5090;
		constexpr auto Internal_Copy = 0x1cb5010;
		constexpr auto GetTypeForControl = 0x1cb4fd0;
		constexpr auto CopyFromPtr = 0x1cb4ab0;
		constexpr auto PopEvent = 0x1cb6520;
		constexpr auto Internal_SetNativeEvent = 0x1cb5210;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1cb50d0;
		constexpr auto ctor = 0x1cb72a0;
		constexpr auto Finalize = 0x1cb4dc0;
		constexpr auto CopyFrom = 0x1cb4b00;
		constexpr auto get_shift = 0x1cb7910;
		constexpr auto get_control = 0x1cb74b0;
		constexpr auto get_alt = 0x1cb7330;
		constexpr auto get_command = 0x1cb7470;
		constexpr auto get_current = 0x1cb74f0;
		constexpr auto set_current = 0x1cb7a30;
		constexpr auto get_isKey = 0x1cb7680;
		constexpr auto get_isMouse = 0x1cb76d0;
		constexpr auto get_isDirectManipulationDevice = 0x1cb7610;
		constexpr auto KeyboardEvent = 0x1cb5290;
		constexpr auto GetHashCode = 0x1cb4ea0;
		constexpr auto Equals = 0x1cb4b70;
		constexpr auto ToString = 0x1cb6560;
		constexpr auto Use = 0x1cb7040;
		constexpr auto get_mousePosition_Injected = 0x1cb77b0;
		constexpr auto set_mousePosition_Injected = 0x1cb7b90;
		constexpr auto get_delta_Injected = 0x1cb7530;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x2591ae0;
		constexpr auto GetKeyUpInt = 0x2591b20;
		constexpr auto GetKeyDownInt = 0x2591aa0;
		constexpr auto GetAxis = 0x2591a20;
		constexpr auto GetAxisRaw = 0x25919e0;
		constexpr auto GetButtonDown = 0x2591a60;
		constexpr auto GetMouseButton = 0x2591be0;
		constexpr auto GetMouseButtonDown = 0x2591b60;
		constexpr auto GetMouseButtonUp = 0x2591ba0;
		constexpr auto GetTouch = 0x2591c60;
		constexpr auto GetKey = 0x2591ae0;
		constexpr auto GetKeyUp = 0x2591b20;
		constexpr auto GetKeyDown = 0x2591aa0;
		constexpr auto get_anyKey = 0x2591cf0;
		constexpr auto get_anyKeyDown = 0x2591cc0;
		constexpr auto get_mousePosition = 0x2591e40;
		constexpr auto get_mouseScrollDelta = 0x2591ef0;
		constexpr auto get_imeCompositionMode = 0x2591dd0;
		constexpr auto set_imeCompositionMode = 0x2592140;
		constexpr auto get_compositionString = 0x2591da0;
		constexpr auto get_compositionCursorPos = 0x2591d60;
		constexpr auto set_compositionCursorPos = 0x2592100;
		constexpr auto get_mousePresent = 0x2591e80;
		constexpr auto get_touchCount = 0x2591f30;
		constexpr auto get_touchSupported = 0x2591f60;
		constexpr auto get_touches = 0x2591f90;
		constexpr auto GetTouch_Injected = 0x2591c20;
		constexpr auto get_mousePosition_Injected = 0x2591e00;
		constexpr auto get_mouseScrollDelta_Injected = 0x2591eb0;
		constexpr auto get_compositionCursorPos_Injected = 0x2591d20;
		constexpr auto set_compositionCursorPos_Injected = 0x25920c0;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0xb55aa0;
		constexpr auto Capsule = 0xb556c0;
		constexpr auto Sphere = 0xb56f40;
		constexpr auto SphereGizmo = 0xb56c50;
		constexpr auto Line = 0xb55d70;
		constexpr auto Arrow = 0xb54790;
		constexpr auto ArrowPadded = 0xb54090;
		constexpr auto Bounds = 0xb549c0;
		constexpr auto Box = 0xb54f80;
		constexpr auto Text = 0xb57220;
		constexpr auto ScreenText = 0xb56ab0;
		constexpr auto Awake = 0xb54950;
		constexpr auto OnPreRender = 0xb566d0;
		constexpr auto OnPostRender = 0xb56390;
		constexpr auto OnGUI = 0xb561c0;
		constexpr auto CreateLineMaterial = 0xb55940;
		constexpr auto get_skin = 0xb57430;
		constexpr auto ctor = 0xb573c0;
		constexpr auto cctor = 0x45c510;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x2404550;
		constexpr auto get_whiteTexture = 0x24045d0;
		constexpr auto get_blackTexture = 0x2404520;
		constexpr auto Compress = 0x2402d40;
		constexpr auto Internal_CreateImpl = 0x24033d0;
		constexpr auto Internal_Create = 0x2403430;
		constexpr auto get_isReadable = 0x2404590;
		constexpr auto ApplyImpl = 0x2402b90;
		constexpr auto ResizeImpl = 0x2403900;
		constexpr auto SetPixelImpl = 0x2403c40;
		constexpr auto GetPixelImpl = 0x2402fb0;
		constexpr auto GetPixelBilinearImpl = 0x2402df0;
		constexpr auto ResizeWithFormatImpl = 0x2403950;
		constexpr auto ReadPixelsImpl = 0x24036f0;
		constexpr auto SetPixelsImpl = 0x2403e40;
		constexpr auto LoadRawTextureDataImpl = 0x2403500;
		constexpr auto GetWritableImageData = 0x2403390;
		constexpr auto GetRawImageDataSize = 0x2403350;
		constexpr auto set_requestedMipmapLevel = 0x2404640;
		constexpr auto set_minimumMipmapLevel = 0x2404600;
		constexpr auto ClearRequestedMipmapLevel = 0x2402d00;
		constexpr auto ClearMinimumMipmapLevel = 0x2402cc0;
		constexpr auto SetAllPixels32 = 0x2403b20;
		constexpr auto SetBlockOfPixels32 = 0x2403b80;
		constexpr auto GetPixels = 0x2403250;
		constexpr auto GetPixels32 = 0x2403150;
		constexpr auto ctor = 0x2404360;
		constexpr auto SetPixel = 0x2403cb0;
		constexpr auto SetPixels = 0x2403ea0;
		constexpr auto GetPixel = 0x2403030;
		constexpr auto GetPixelBilinear = 0x2402e70;
		constexpr auto LoadRawTextureData = 0x2403560;
		constexpr auto Apply = 0x2402c10;
		constexpr auto Resize = 0x2403a80;
		constexpr auto ReadPixels = 0x2403830;
		constexpr auto SetPixels32 = 0x2403b20;
		constexpr auto SetPixelImpl_Injected = 0x2403be0;
		constexpr auto GetPixelImpl_Injected = 0x2402f50;
		constexpr auto GetPixelBilinearImpl_Injected = 0x2402d90;
		constexpr auto ReadPixelsImpl_Injected = 0x2403680;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x228ea10;
		constexpr auto HasFlag = 0x228def0;
		constexpr auto SetFlag = 0x228e9a0;
		constexpr auto get_ducked = 0x228ea60;
		constexpr auto set_ducked = 0x228eb60;
		constexpr auto get_jumped = 0x228ea90;
		constexpr auto set_jumped = 0x228ebc0;
		constexpr auto get_onground = 0x228ead0;
		constexpr auto set_onground = 0x228ec40;
		constexpr auto get_sleeping = 0x228eb00;
		constexpr auto set_sleeping = 0x228eca0;
		constexpr auto get_sprinting = 0x228eb10;
		constexpr auto set_sprinting = 0x228ecc0;
		constexpr auto get_onLadder = 0x228eab0;
		constexpr auto set_onLadder = 0x228ec00;
		constexpr auto get_flying = 0x228ea70;
		constexpr auto set_flying = 0x228eb80;
		constexpr auto get_aiming = 0x228ea40;
		constexpr auto set_aiming = 0x228eb20;
		constexpr auto get_prone = 0x228eae0;
		constexpr auto set_prone = 0x228ec60;
		constexpr auto get_mounted = 0x228eaa0;
		constexpr auto set_mounted = 0x228ebe0;
		constexpr auto get_relaxed = 0x228eaf0;
		constexpr auto set_relaxed = 0x228ec80;
		constexpr auto get_crawling = 0x228ea50;
		constexpr auto set_crawling = 0x228eb40;
		constexpr auto get_onPhone = 0x228eac0;
		constexpr auto set_onPhone = 0x228ec20;
		constexpr auto get_headLook = 0x228ea80;
		constexpr auto set_headLook = 0x228eba0;
		constexpr auto Equal = 0x228db90;
		constexpr auto ResetToPool = 0x228dfd0;
		constexpr auto Dispose = 0x228db10;
		constexpr auto EnterPool = 0x119b020;
		constexpr auto LeavePool = 0x119b050;
		constexpr auto CopyTo = 0x228c7f0;
		constexpr auto Copy = 0x228c840;
		constexpr auto Deserialize = 0x228d890;
		constexpr auto DeserializeLengthDelimited = 0x228c8e0;
		constexpr auto DeserializeLength = 0x228cf70;
		constexpr auto FromProto = 0x228dca0;
		constexpr auto WriteToStream = 0x228e9d0;
		constexpr auto WriteToStreamDelta = 0x228e9f0;
		constexpr auto ReadFromStream = 0x228df00;
		constexpr auto SerializeDelta = 0x228e080;
		constexpr auto Serialize = 0x228e6e0;
		constexpr auto ToProtoBytes = 0x228e9c0;
		constexpr auto ToProto = 0x228e9d0;
		constexpr auto SerializeToBytes = 0x228e5d0;
		constexpr auto SerializeLengthDelimited = 0x228e520;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x22bc140;
		constexpr auto Dispose = 0x22bbde0;
		constexpr auto EnterPool = 0x119b020;
		constexpr auto LeavePool = 0x119b050;
		constexpr auto CopyTo = 0x22bac70;
		constexpr auto Copy = 0x22bacb0;
		constexpr auto Deserialize = 0x22bb3e0;
		constexpr auto DeserializeLengthDelimited = 0x22bad50;
		constexpr auto DeserializeLength = 0x22bb350;
		constexpr auto FromProto = 0x22bbf10;
		constexpr auto WriteToStream = 0x22bcb50;
		constexpr auto WriteToStreamDelta = 0x22bcb70;
		constexpr auto ReadFromStream = 0x22bc120;
		constexpr auto SerializeDelta = 0x22bc2a0;
		constexpr auto Serialize = 0x22bc8b0;
		constexpr auto ToProtoBytes = 0x22bcb40;
		constexpr auto ToProto = 0x22bcb50;
		constexpr auto SerializeToBytes = 0x22bc7a0;
		constexpr auto SerializeLengthDelimited = 0x22bc6f0;
		constexpr auto ctor = 0x11497b0;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x7afd90;
		constexpr auto get_isAuthoritative = 0x7b4bd0;
		constexpr auto get_isAlive = 0x7b4b90;
		constexpr auto Retire = 0x7b3980;
		constexpr auto Cleanup = 0x7b02e0;
		constexpr auto AdjustVelocity = 0x7afb20;
		constexpr auto InitializeVelocity = 0x7b2bc0;
		constexpr auto OnDisable = 0x7b2e30;
		constexpr auto Update = 0x7b47f0;
		constexpr auto SetEffectScale = 0x7b3f50;
		constexpr auto DoFlybySound = 0x7b04e0;
		constexpr auto CalculateEffectScale = 0x7b0240;
		constexpr auto UpdateVelocity = 0x7b4510;
		constexpr auto DoVelocityUpdate = 0x7b23d0;
		constexpr auto DoMovement = 0x7b1200;
		constexpr auto DoWaterHit = 0x7b27b0;
		constexpr auto DoRicochet = 0x7b1fb0;
		constexpr auto DoHit = 0x7b0af0;
		constexpr auto AdditiveImpactEffect = 0x45c510;
		constexpr auto Reflect = 0x7b3100;
		constexpr auto Refract = 0x7b3450;
		constexpr auto RandomRotation = 0x7b3000;
		constexpr auto Launch = 0x7b2da0;
		constexpr auto FleshMaterialID = 0x7b2ac0;
		constexpr auto WaterMaterialID = 0x7b48f0;
		constexpr auto IsWaterMaterial = 0x7b2c70;
		constexpr auto ShouldStopProjectile = 0x7b4450;
		constexpr auto ctor = 0x7b49f0;
		constexpr auto cctor = 0x45c510;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xc212f0;
		constexpr auto get_worldStandingPosition = 0xc214e0;
		constexpr auto get_worldCrouchedPosition = 0xc211f0;
		constexpr auto get_worldCrawlingPosition = 0xc210f0;
		constexpr auto get_position = 0xc20bb0;
		constexpr auto get_BodyLeanOffset = 0xc20270;
		constexpr auto get_center = 0xc205d0;
		constexpr auto get_offset = 0xc208f0;
		constexpr auto get_rotation = 0xc21040;
		constexpr auto set_rotation = 0xc21640;
		constexpr auto get_bodyRotation = 0xc204f0;
		constexpr auto set_bodyRotation = 0xc21610;
		constexpr auto get_headAngles = 0xc208d0;
		constexpr auto set_headAngles = 0xc21620;
		constexpr auto get_rotationLook = 0xc21030;
		constexpr auto set_rotationLook = 0xc21630;
		constexpr auto get_parentRotation = 0xc20a20;
		constexpr auto get_canUpdateViewAngles = 0xc20500;
		constexpr auto get_IsAltLookingLegsThreshold = 0xc204e0;
		constexpr auto set_IsAltLookingLegsThreshold = 0xc21600;
		constexpr auto FrameUpdate = 0xc1ee00;
		constexpr auto UpdateAltLegsThreshold = 0xc1fe90;
		constexpr auto UpdateCamera = 0xc1ff00;
		constexpr auto DoFirstPersonCamera = 0xc1ce40;
		constexpr auto DoInEyeCamera = 0xc1d490;
		constexpr auto DoThirdPersonCamera = 0xc1d7e0;
		constexpr auto DoDeathCamera = 0xc1c860;
		constexpr auto ApplyCameraMoves = 0xc1c230;
		constexpr auto MovementForward = 0xc1fb10;
		constexpr auto MovementRight = 0xc1fcd0;
		constexpr auto BodyRay = 0xc1c410;
		constexpr auto BodyForward = 0xc1c2c0;
		constexpr auto BodyRight = 0xc1c5c0;
		constexpr auto BodyUp = 0xc1c710;
		constexpr auto HeadRay = 0xc1f750;
		constexpr auto HeadForward = 0xc1f660;
		constexpr auto HeadRight = 0xc1f930;
		constexpr auto HeadUp = 0xc1fa20;
		constexpr auto GetLookRotation = 0xc1f4e0;
		constexpr auto GetAimRotation = 0xc1f420;
		constexpr auto ctor = 0xc201b0;
		constexpr auto cctor = 0xc200b0;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0xbef350;
		constexpr auto OnDisable = 0xbef6c0;
		constexpr auto Holster = 0xbef650;
		constexpr auto Clear = 0xbef1e0;
		constexpr auto OnFrame = 0xbef730;
		constexpr auto Play = 0xbef890;
		constexpr auto ResetTrigger = 0xbef9c0;
		constexpr auto Trigger = 0xbefcd0;
		constexpr auto CrossFade = 0xbef2b0;
		constexpr auto SetBool = 0xbefaf0;
		constexpr auto SetFloat = 0xbefc30;
		constexpr auto set_ironSights = 0xbefdf0;
		constexpr auto ctor = 0x3ed250;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x378;
		constexpr auto arrowBack = 0x37c;
		constexpr auto swapArrows = 0x380;
		constexpr auto wasAiming = 0x388;

		constexpr auto OnRpcMessage = 0x7033a0;
		constexpr auto ClientInit = 0x702b00;
		constexpr auto OnSignal = 0x703490;
		constexpr auto UpdatePullbackThink = 0x7038e0;
		constexpr auto CancelPullbackThink = 0x702a90;
		constexpr auto PullbackThink = 0x7037a0;
		constexpr auto OnInput = 0x703020;
		constexpr auto OnHolstered = 0x702fe0;
		constexpr auto DoAttack = 0x702b70;
		constexpr auto IsAiming = 0x702e10;
		constexpr auto OnViewmodelEvent = 0x703600;
		constexpr auto OnFrame = 0x702eb0;
		constexpr auto PostNetworkUpdate = 0x703670;
		constexpr auto TryReload = 0x703870;
		constexpr auto ProcessSpectatorViewmodel = 0x703710;
		constexpr auto ctor = 0x6bf070;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f8;
		constexpr auto repeatDelay = 0x1fc;
		constexpr auto animationDelay = 0x200;
		constexpr auto effectiveRange = 0x204;
		constexpr auto npcDamageScale = 0x208;
		constexpr auto attackLengthMin = 0x20c;
		constexpr auto attackLengthMax = 0x210;
		constexpr auto attackSpacing = 0x214;
		constexpr auto aiAimSwayOffset = 0x218;
		constexpr auto aiAimCone = 0x21c;
		constexpr auto aiOnlyInRange = 0x220;
		constexpr auto CloseRangeAddition = 0x224;
		constexpr auto MediumRangeAddition = 0x228;
		constexpr auto LongRangeAddition = 0x22c;
		constexpr auto CanUseAtMediumRange = 0x230;
		constexpr auto CanUseAtLongRange = 0x231;
		constexpr auto reloadSounds = 0x238;
		constexpr auto thirdPersonMeleeSound = 0x240;
		constexpr auto recoilCompDelayOverride = 0x248;
		constexpr auto wantsRecoilComp = 0x24c;
		constexpr auto nextAttackTime = 0x250;
		constexpr auto lastTickTime = 0x254;
		constexpr auto nextTickTime = 0x258;
		constexpr auto timeSinceDeploy = 0x25c;
		constexpr auto lastRecoilCompTime = 0x260;
		constexpr auto startAimingDirection = 0x264;
		constexpr auto wasDoingRecoilComp = 0x270;
		constexpr auto reductionSpeed = 0x274;

		constexpr auto GetInheritedVelocity = 0x9c0040;
		constexpr auto get_NextAttackTime = 0x9c0570;
		constexpr auto GetAttackStats = 0x45c510;
		constexpr auto StartAttackCooldownRaw = 0x9c02b0;
		constexpr auto StartAttackCooldown = 0x9c02e0;
		constexpr auto ResetAttackCooldown = 0x9c0250;
		constexpr auto HasAttackCooldown = 0x9c00b0;
		constexpr auto GetAttackCooldown = 0x9bff40;
		constexpr auto GetAttackIdle = 0x9bffc0;
		constexpr auto CalculateCooldownTime = 0x9bf370;
		constexpr auto IsFullyDeployed = 0x9c00e0;
		constexpr auto ProcessInputTime = 0x9c0180;
		constexpr auto OnInput = 0x9c0120;
		constexpr auto OnDeploy = 0x9c0100;
		constexpr auto SpectatorNotifyDeploy = 0x9c0260;
		constexpr auto SpectatorNotifyTick = 0x9c0270;
		constexpr auto RecoilCompReady = 0x9c01d0;
		constexpr auto AddPunch = 0x9bf1c0;
		constexpr auto DoRecoilCompensation = 0x9bf4b0;
		constexpr auto ctor = 0x9c0480;
		constexpr auto cctor = 0x9c0410;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x78;
		constexpr auto positionLerp = 0x80;
		constexpr auto menuOptions = 0x88;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x90;
		constexpr auto links = 0x98;
		constexpr auto linkedToNeighbours = 0xa0;
		constexpr auto QueuedFileRequests = 0x10;
		constexpr auto _fileRequestCounter = 0x18;
		constexpr auto _flushQueuedFileRequests = 0x30;
		constexpr auto _pendingFileRequests = 0xa8;
		constexpr auto updateParentingAction = 0xb0;
		constexpr auto addedToParentEntity = 0xb8;
		constexpr auto itemSkin = 0xc0;
		constexpr auto entitySlots = 0xc8;
		constexpr auto triggers = 0xd0;
		constexpr auto isVisible = 0xd8;
		constexpr auto isAnimatorVisible = 0xd9;
		constexpr auto isShadowVisible = 0xda;
		constexpr auto localOccludee = 0xe0;
		constexpr auto Weightk__BackingField = 0x100;
		constexpr auto bounds = 0x104;
		constexpr auto impactEffect = 0x120;
		constexpr auto enableSaving = 0x128;
		constexpr auto syncPosition = 0x129;
		constexpr auto model = 0x130;
		constexpr auto flags = 0x138;
		constexpr auto parentBone = 0x13c;
		constexpr auto skinID = 0x140;
		constexpr auto _components = 0x148;
		constexpr auto HasBrain = 0x150;
		constexpr auto _name = 0x158;
		constexpr auto OwnerIDk__BackingField = 0x160;

		constexpr auto OnRpcMessage = 0x855720;
		constexpr auto GetEntityMenu = 0x850b50;
		constexpr auto GetMenuOptions = 0x45c510;
		constexpr auto get_HasMenuOptions = 0x599410;
		constexpr auto GetItemOptions = 0x851310;
		constexpr auto GetMovementModify = 0x851d60;
		constexpr auto GetExtrapolationTime = 0x850c90;
		constexpr auto GetInterpolationDelay = 0x851160;
		constexpr auto GetInterpolationInertia = 0x8511f0;
		constexpr auto GetInterpolationSmoothing = 0x851280;
		constexpr auto GetAngularVelocityClient = 0x8505f0;
		constexpr auto GetLocalVelocityClient = 0x851560;
		constexpr auto DrawInterpolationState = 0x84e660;
		constexpr auto LerpIdleDisable = 0x854090;
		constexpr auto ClientInit = 0x84d8b0;
		constexpr auto ClientOnEnable = 0x84d960;
		constexpr auto OnPositionalFromNetwork = 0x8553b0;
		constexpr auto StartLerping = 0x858950;
		constexpr auto StopLerping = 0x858ad0;
		constexpr auto ShouldLerp = 0x858540;
		constexpr auto SetNetworkPosition = 0x858030;
		constexpr auto SetNetworkRotation = 0x8581a0;
		constexpr auto DoDestroyEffects = 0x84e640;
		constexpr auto SpawnGibs = 0x858640;
		constexpr auto DoNetworkDestroy = 0x3ef140;
		constexpr auto PostNetworkUpdate = 0x856ae0;
		constexpr auto OnBecameRagdoll = 0x8550f0;
		constexpr auto GetMenuInformation = 0x8516e0;
		constexpr auto HideMenuItems = 0x852ab0;
		constexpr auto GetMenuItems = 0x8519d0;
		constexpr auto OnUse = 0x8568d0;
		constexpr auto OnUseHeld = 0x8566b0;
		constexpr auto OnUseStopped = 0x45c510;
		constexpr auto OnRendered = 0x45c510;
		constexpr auto DoClientDestroy = 0x84e390;
		constexpr auto GetEyeTransform = 0x850d20;
		constexpr auto NeedsCrosshair = 0x854fe0;
		constexpr auto AlwaysShowCrosshair = 0x599410;
		constexpr auto ShouldDestroyWithGroup = 0x858490;
		constexpr auto DetachEffects = 0x84df80;
		constexpr auto OnVoiceData = 0x45c510;
		constexpr auto LookingAtTick = 0x45c510;
		constexpr auto get_RealisticMass = 0x66b5b0;
		constexpr auto OnCollision = 0x8551a0;
		constexpr auto ReceiveCollisionMessages = 0x856bd0;
		constexpr auto DebugClient = 0x45c510;
		constexpr auto OnDebugStart = 0x8551f0;
		constexpr auto DebugText = 0x84dec0;
		constexpr auto HasFlag = 0x852a70;
		constexpr auto ParentHasFlag = 0x856a40;
		constexpr auto SetFlag = 0x857e60;
		constexpr auto IsOn = 0x8530c0;
		constexpr auto IsOpen = 0x8530d0;
		constexpr auto IsOnFire = 0x8530b0;
		constexpr auto IsLocked = 0x852e00;
		constexpr auto IsDebugging = 0x852c10;
		constexpr auto IsDisabled = 0x852c20;
		constexpr auto IsBroken = 0x852c00;
		constexpr auto IsBusy = 0x852ab0;
		constexpr auto GetLogColor = 0x851690;
		constexpr auto OnFlagsChanged = 0x8552b0;
		constexpr auto IsOccupied = 0x852f00;
		constexpr auto FindLink = 0x84f5c0;
		constexpr auto EntityLinkBroadcast = 0x84f0a0;
		constexpr auto ReceivedEntityLinkBroadcast = 0x856c60;
		constexpr auto GetEntityLinks = 0x850b10;
		constexpr auto LinkToEntity = 0x8540c0;
		constexpr auto LinkToNeighbours = 0x854320;
		constexpr auto InitEntityLinks = 0x852ac0;
		constexpr auto FreeEntityLinks = 0x850510;
		constexpr auto RefreshEntityLinks = 0x856cd0;
		constexpr auto RequestFileFromServer = 0x857580;
		constexpr auto EnqueueFileRequest = 0x84ed50;
		constexpr auto RequestFileImpl = 0x857680;
		constexpr auto FlushQueuedFileRequests = 0x84f8a0;
		constexpr auto CL_ReceiveFileRequest = 0x84d5c0;
		constexpr auto CompletePendingFileRequests = 0x84db60;
		constexpr auto UpdateChildren = 0x858c90;
		constexpr auto UpdateParenting = 0x859a60;
		constexpr auto SetParentTransform = 0x858270;
		constexpr auto UpdateDisableState = 0x859000;
		constexpr auto HasClientTransformOffset = 0x8528d0;
		constexpr auto RemoveClientTransformOffset = 0x856fe0;
		constexpr auto AddClientTransformOffset = 0x84cf80;
		constexpr auto OnParentChangingClient = 0x45c510;
		constexpr auto GetBuildingPrivilege = 0x850aa0;
		constexpr auto ServerRPC = 0x857b20;
		constexpr auto ServerRPCStart = 0x857970;
		constexpr auto ServerRPCSend = 0x857900;
		constexpr auto CL_RPCMessage = 0x84d2d0;
		constexpr auto SendSignalBroadcast = 0x857850;
		constexpr auto SignalFromServerEx = 0x858560;
		constexpr auto SignalFromServer = 0x8585f0;
		constexpr auto OnSignal = 0x45c510;
		constexpr auto OnSkinChanged = 0x856320;
		constexpr auto OnSkinRefreshStart = 0x856690;
		constexpr auto OnSkinRefreshEnd = 0x856670;
		constexpr auto PreProcess = 0x856b00;
		constexpr auto HasAnySlot = 0x8527f0;
		constexpr auto GetSlot = 0x852370;
		constexpr auto GetSlotAnchorName = 0x852230;
		constexpr auto GetSlotAnchor = 0x8522c0;
		constexpr auto HasSlot = 0x599410;
		constexpr auto get_Traits = 0x5ed110;
		constexpr auto HasTrait = 0x852a80;
		constexpr auto HasAnyTrait = 0x8528a0;
		constexpr auto EnterTrigger = 0x84eff0;
		constexpr auto LeaveTrigger = 0x853ff0;
		constexpr auto RemoveFromTriggers = 0x857040;
		constexpr auto ForceUpdateTriggersAction = 0x84fa90;
		constexpr auto ForceUpdateTriggers = 0x84fac0;
		constexpr auto MakeVisible = 0x854fc0;
		constexpr auto UpdateCullingSpheres = 0x858e80;
		constexpr auto RegisterForCulling = 0x856db0;
		constexpr auto OnVisibilityChanged = 0x45c510;
		constexpr auto UnregisterFromCulling = 0x858c10;
		constexpr auto UpdateCullingBounds = 0x858db0;
		constexpr auto CheckVisibility = 0x84d890;
		constexpr auto CalcEntityVisUpdateRate = 0x84d770;
		constexpr auto DebugDrawCullingBounds = 0x84ddf0;
		constexpr auto get_Weight = 0x85a280;
		constexpr auto set_Weight = 0x85a2a0;
		constexpr auto get_Components = 0x85a200;
		constexpr auto ToPlayer = 0x5ed110;
		constexpr auto get_IsNpc = 0x599410;
		constexpr auto InitShared = 0x846c70;
		constexpr auto DestroyShared = 0x849b80;
		constexpr auto ResetState = 0x8577e0;
		constexpr auto InheritedVelocityScale = 0x5ed100;
		constexpr auto InheritedVelocityDirection = 0x5d6d00;
		constexpr auto GetInheritedProjectileVelocity = 0x850ea0;
		constexpr auto GetInheritedThrowVelocity = 0x851130;
		constexpr auto GetInheritedDropVelocity = 0x850dc0;
		constexpr auto GetParentVelocity = 0x851f70;
		constexpr auto GetWorldVelocity = 0x8523d0;
		constexpr auto GetLocalVelocity = 0x8515f0;
		constexpr auto GetAngularVelocity = 0x850680;
		constexpr auto WorldSpaceBounds = 0x859f00;
		constexpr auto PivotPoint = 0x3eda40;
		constexpr auto CenterPoint = 0x84d850;
		constexpr auto ClosestPoint = 0x84dab0;
		constexpr auto TriggerPoint = 0x84d850;
		constexpr auto Distance = 0x84e250;
		constexpr auto SqrDistance = 0x858810;
		constexpr auto Distance2D = 0x84e0b0;
		constexpr auto SqrDistance2D = 0x858670;
		constexpr auto IsVisible = 0x853c30;
		constexpr auto IsVisibleSpecificLayers = 0x8535e0;
		constexpr auto IsVisibleAndCanSee = 0x8533d0;
		constexpr auto IsOlderThan = 0x853010;
		constexpr auto IsOutside = 0x8530e0;
		constexpr auto WaterFactor = 0x859a70;
		constexpr auto AirFactor = 0x84d020;
		constexpr auto WaterTestFromVolumes = 0x859c40;
		constexpr auto IsInWaterVolume = 0x852cc0;
		constexpr auto BlocksWaterFor = 0x599410;
		constexpr auto Health = 0x5ed100;
		constexpr auto MaxHealth = 0x5ed100;
		constexpr auto MaxVelocity = 0x5ed100;
		constexpr auto BoundsPadding = 0x84d060;
		constexpr auto PenetrationResistance = 0x66b5b0;
		constexpr auto GetImpactEffect = 0x850db0;
		constexpr auto OnAttacked = 0x45c510;
		constexpr auto GetItem = 0x5ed110;
		constexpr auto GiveItem = 0x8527c0;
		constexpr auto CanBeLooted = 0x5d6d00;
		constexpr auto GetEntity = 0x671080;
		constexpr auto ToString = 0x858b20;
		constexpr auto Categorize = 0x84d820;
		constexpr auto Log = 0x854b10;
		constexpr auto SetModel = 0x857f80;
		constexpr auto GetModel = 0x6ec720;
		constexpr auto GetBones = 0x850720;
		constexpr auto FindBone = 0x84f450;
		constexpr auto FindBoneID = 0x84f370;
		constexpr auto FindClosestBone = 0x84f500;
		constexpr auto get_OwnerID = 0x85a270;
		constexpr auto set_OwnerID = 0x85a290;
		constexpr auto ShouldBlockProjectiles = 0x5d6d00;
		constexpr auto ShouldInheritNetworkGroup = 0x5d6d00;
		constexpr auto SupportsChildDeployables = 0x599410;
		constexpr auto BroadcastEntityMessage = 0x84d070;
		constexpr auto OnEntityMessage = 0x45c510;
		constexpr auto Load = 0x854610;
		constexpr auto ctor = 0x85a0f0;
		constexpr auto cctor = 0x85a040;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x2405170;
		constexpr auto get_deltaTime = 0x2404fc0;
		constexpr auto get_fixedTime = 0x2405020;
		constexpr auto get_unscaledTime = 0x24051d0;
		constexpr auto get_unscaledDeltaTime = 0x24051a0;
		constexpr auto get_fixedDeltaTime = 0x2404ff0;
		constexpr auto set_fixedDeltaTime = 0x2405200;
		constexpr auto get_maximumDeltaTime = 0x2405080;
		constexpr auto set_maximumDeltaTime = 0x2405240;
		constexpr auto get_smoothDeltaTime = 0x2405110;
		constexpr auto get_timeScale = 0x2405140;
		constexpr auto set_timeScale = 0x2405280;
		constexpr auto get_frameCount = 0x2405050;
		constexpr auto get_renderedFrameCount = 0x24050e0;
		constexpr auto get_realtimeSinceStartup = 0x24050b0;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x251b000;
		constexpr auto get_queriesHitBackfaces = 0x251b040;
		constexpr auto set_queriesHitBackfaces = 0x251b0b0;
		constexpr auto get_defaultPhysicsScene = 0x251af80;
		constexpr auto IgnoreCollision = 0x2517830;
		constexpr auto Raycast = 0x25197a0;
		constexpr auto Linecast = 0x2517970;
		constexpr auto CapsuleCast = 0x2517070;
		constexpr auto SphereCast = 0x251aa10;
		constexpr auto BoxCast = 0x2516ab0;
		constexpr auto Internal_RaycastAll = 0x2517900;
		constexpr auto RaycastAll = 0x25184e0;
		constexpr auto RaycastNonAlloc = 0x2518c00;
		constexpr auto Query_SphereCastAll = 0x2518380;
		constexpr auto SphereCastAll = 0x251a480;
		constexpr auto SyncTransforms = 0x251aee0;
		constexpr auto get_autoSyncTransforms = 0x251af10;
		constexpr auto set_autoSyncTransforms = 0x251b070;
		constexpr auto OverlapSphereNonAlloc = 0x2518250;
		constexpr auto CheckSphere_Internal = 0x2517650;
		constexpr auto CheckSphere = 0x25176c0;
		constexpr auto CapsuleCastNonAlloc = 0x2516e10;
		constexpr auto SphereCastNonAlloc = 0x251a610;
		constexpr auto CheckCapsule_Internal = 0x25173b0;
		constexpr auto CheckCapsule = 0x2517420;
		constexpr auto CheckBox_Internal = 0x25171f0;
		constexpr auto CheckBox = 0x2517260;
		constexpr auto OverlapBox_Internal = 0x2517f30;
		constexpr auto OverlapBox = 0x2517fa0;
		constexpr auto OverlapBoxNonAlloc = 0x2517dd0;
		constexpr auto OverlapCapsuleNonAlloc = 0x2518160;
		constexpr auto get_gravity_Injected = 0x251afc0;
		constexpr auto get_defaultPhysicsScene_Injected = 0x251af40;
		constexpr auto Internal_RaycastAll_Injected = 0x2517890;
		constexpr auto Query_SphereCastAll_Injected = 0x2518310;
		constexpr auto CheckSphere_Internal_Injected = 0x25175e0;
		constexpr auto CheckCapsule_Internal_Injected = 0x2517340;
		constexpr auto CheckBox_Internal_Injected = 0x2517180;
		constexpr auto OverlapBox_Internal_Injected = 0x2517ec0;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x9bb950;
		constexpr auto LookupNameLower = 0x9bb690;
		constexpr auto LookupNameUpper = 0x9bb7f0;
		constexpr auto GetName = 0x9bb5d0;
		constexpr auto GetNameLower = 0x9bb450;
		constexpr auto GetNameUpper = 0x9bb510;
		constexpr auto cctor = 0x9bba90;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1abd290;
		constexpr auto get_gameObject = 0x1abd250;
		constexpr auto GetComponent = 0x1abce30;
		constexpr auto GetComponentFastPath = 0x1abccc0;
		constexpr auto GetComponentInChildren = 0x1abcd20;
		constexpr auto GetComponentsInChildren = 0x1abcf10;
		constexpr auto GetComponentInParent = 0x1abcdb0;
		constexpr auto GetComponents = 0x1abcf70;
		constexpr auto GetComponentsForListInternal = 0x1abceb0;
		constexpr auto CompareTag = 0x1abcc40;
		constexpr auto SendMessageUpwards = 0x1abd060;
		constexpr auto SendMessage = 0x1abd1a0;
		constexpr auto BroadcastMessage = 0x1abcbd0;
		constexpr auto ctor = 0x1ab7620;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1b6b230;
		constexpr auto get_position = 0x2408010;
		constexpr auto set_position = 0x2408990;
		constexpr auto get_localPosition = 0x2407ce0;
		constexpr auto set_localPosition = 0x2408700;
		constexpr auto get_eulerAngles = 0x24079e0;
		constexpr auto set_eulerAngles = 0x2408450;
		constexpr auto get_localEulerAngles = 0x2407c00;
		constexpr auto set_localEulerAngles = 0x2408600;
		constexpr auto get_right = 0x2408060;
		constexpr auto set_right = 0x24089e0;
		constexpr auto get_up = 0x2408250;
		constexpr auto set_up = 0x2408bd0;
		constexpr auto get_forward = 0x2407a70;
		constexpr auto set_forward = 0x2408500;
		constexpr auto get_rotation = 0x2408200;
		constexpr auto set_rotation = 0x2408b80;
		constexpr auto get_localRotation = 0x2407d80;
		constexpr auto set_localRotation = 0x24087a0;
		constexpr auto get_localScale = 0x2407e20;
		constexpr auto set_localScale = 0x2408840;
		constexpr auto get_parent = 0x2406400;
		constexpr auto set_parent = 0x2408890;
		constexpr auto get_parentInternal = 0x2406400;
		constexpr auto set_parentInternal = 0x24073e0;
		constexpr auto GetParent = 0x2406400;
		constexpr auto SetParent = 0x24073e0;
		constexpr auto get_worldToLocalMatrix = 0x24083f0;
		constexpr auto get_localToWorldMatrix = 0x2407ec0;
		constexpr auto SetPositionAndRotation = 0x2407490;
		constexpr auto Translate = 0x24077d0;
		constexpr auto Rotate = 0x2406df0;
		constexpr auto RotateAroundInternal = 0x2406b50;
		constexpr auto RotateAround = 0x2406bb0;
		constexpr auto LookAt = 0x2406980;
		constexpr auto Internal_LookAt = 0x2406520;
		constexpr auto TransformDirection = 0x2407590;
		constexpr auto InverseTransformDirection = 0x24065e0;
		constexpr auto TransformVector = 0x2407710;
		constexpr auto InverseTransformVector = 0x2406760;
		constexpr auto TransformPoint = 0x2407650;
		constexpr auto InverseTransformPoint = 0x24066a0;
		constexpr auto get_root = 0x2406440;
		constexpr auto GetRoot = 0x2406440;
		constexpr auto get_childCount = 0x24079a0;
		constexpr auto DetachChildren = 0x2406210;
		constexpr auto SetAsFirstSibling = 0x2407300;
		constexpr auto SetAsLastSibling = 0x2407340;
		constexpr auto SetSiblingIndex = 0x24074f0;
		constexpr auto GetSiblingIndex = 0x2406480;
		constexpr auto FindRelativeTransformWithPath = 0x2406250;
		constexpr auto Find = 0x24062b0;
		constexpr auto get_lossyScale = 0x2407f70;
		constexpr auto IsChildOf = 0x24067c0;
		constexpr auto get_hasChanged = 0x2407bc0;
		constexpr auto set_hasChanged = 0x24085b0;
		constexpr auto GetEnumerator = 0x2406390;
		constexpr auto GetChild = 0x2406350;
		constexpr auto get_position_Injected = 0x2407fc0;
		constexpr auto set_position_Injected = 0x2408940;
		constexpr auto get_localPosition_Injected = 0x2407c90;
		constexpr auto set_localPosition_Injected = 0x24086b0;
		constexpr auto get_rotation_Injected = 0x24081b0;
		constexpr auto set_rotation_Injected = 0x2408b30;
		constexpr auto get_localRotation_Injected = 0x2407d30;
		constexpr auto set_localRotation_Injected = 0x2408750;
		constexpr auto get_localScale_Injected = 0x2407dd0;
		constexpr auto set_localScale_Injected = 0x24087f0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x24083a0;
		constexpr auto get_localToWorldMatrix_Injected = 0x2407e70;
		constexpr auto SetPositionAndRotation_Injected = 0x2407430;
		constexpr auto RotateAroundInternal_Injected = 0x2406af0;
		constexpr auto Internal_LookAt_Injected = 0x24064c0;
		constexpr auto TransformDirection_Injected = 0x2407530;
		constexpr auto InverseTransformDirection_Injected = 0x2406580;
		constexpr auto TransformVector_Injected = 0x24076b0;
		constexpr auto InverseTransformVector_Injected = 0x2406700;
		constexpr auto TransformPoint_Injected = 0x24075f0;
		constexpr auto InverseTransformPoint_Injected = 0x2406640;
		constexpr auto get_lossyScale_Injected = 0x2407f20;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0xdb82d0;
		constexpr auto Trace = 0xdb8bd0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x80e300;
		constexpr auto HitNormalWorld = 0x80e1e0;
		constexpr auto BuildAttackMessage = 0x80d950;
		constexpr auto Clear = 0x80e100;
		constexpr auto ctor = 0x3ef140;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1b71a50;
		constexpr auto Inverse = 0x1b71e40;
		constexpr auto Slerp = 0x1b728c0;
		constexpr auto SlerpUnclamped = 0x1b727a0;
		constexpr auto Lerp = 0x1b72070;
		constexpr auto LerpUnclamped = 0x1b71f50;
		constexpr auto Internal_FromEulerRad = 0x1b71bb0;
		constexpr auto Internal_ToEulerRad = 0x1b71d60;
		constexpr auto AngleAxis = 0x1b71430;
		constexpr auto LookRotation = 0x1b722d0;
		constexpr auto ctor = 0xf90e0;
		constexpr auto get_identity = 0x1b72dc0;
		constexpr auto op_Multiply = 0x1b731e0;
		constexpr auto IsEqualUsingDot = 0x1b71ed0;
		constexpr auto op_Equality = 0x1b72e30;
		constexpr auto op_Inequality = 0x1b72ef0;
		constexpr auto Dot = 0x1b715f0;
		constexpr auto SetLookRotation = 0x3102a0;
		constexpr auto Angle = 0x1b714d0;
		constexpr auto Internal_MakePositive = 0x1b71c40;
		constexpr auto get_eulerAngles = 0x3103c0;
		constexpr auto Euler = 0x1b71720;
		constexpr auto RotateTowards = 0x1b72370;
		constexpr auto GetHashCode = 0x310230;
		constexpr auto Equals = 0x310150;
		constexpr auto ToString = 0x3103b0;
		constexpr auto cctor = 0x1b72bb0;
		constexpr auto FromToRotation_Injected = 0x1b719f0;
		constexpr auto Inverse_Injected = 0x1b71df0;
		constexpr auto Slerp_Injected = 0x1b72850;
		constexpr auto SlerpUnclamped_Injected = 0x1b72730;
		constexpr auto Lerp_Injected = 0x1b72000;
		constexpr auto LerpUnclamped_Injected = 0x1b71ee0;
		constexpr auto Internal_FromEulerRad_Injected = 0x1b71b60;
		constexpr auto Internal_ToEulerRad_Injected = 0x1b71d10;
		constexpr auto AngleAxis_Injected = 0x1b713d0;
		constexpr auto LookRotation_Injected = 0x1b72120;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x7f3de0;
		constexpr auto CheckCapsule = 0x7f3370;
		constexpr auto CheckOBB = 0x7f3cb0;
		constexpr auto CheckOBBAndEntity = 0x7f3a30;
		constexpr auto CheckBounds = 0x7f3210;
		constexpr auto CheckInsideNonConvexMesh = 0x7f3680;
		constexpr auto CheckInsideAnyCollider = 0x7f34f0;
		constexpr auto OverlapSphere = 0x7f51f0;
		constexpr auto CapsuleSweep = 0x7f2f70;
		constexpr auto OverlapCapsule = 0x7f4f70;
		constexpr auto OverlapOBB = 0x7f50a0;
		constexpr auto OverlapBounds = 0x7f4dd0;
		constexpr auto BufferToList = 0x7f2dd0;
		constexpr auto HitBufferToList = 0x7f4020;
		constexpr auto Trace = 0x7f58a0;
		constexpr auto TraceAll = 0x7f57c0;
		constexpr auto TraceAllUnordered = 0x7f54d0;
		constexpr auto LineOfSightRadius = 0x7f49b0;
		constexpr auto LineOfSight = 0x7f4ba0;
		constexpr auto LineOfSightInternal = 0x7f4190;
		constexpr auto Verify = 0x7f5ab0;
		constexpr auto CompareEntity = 0x7f3ea0;
		constexpr auto HandleTerrainCollision = 0x7f3f10;
		constexpr auto Sort = 0x7f53d0;
		constexpr auto cctor = 0x7f5d60;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xda1110;
		constexpr auto Test = 0xda32c0;
		constexpr auto GetWaterDepth = 0xda19e0;
		constexpr auto GetOverallWaterDepth = 0xda1890;
		constexpr auto GetBuoyancyWaterInfo = 0xda12f0;
		constexpr auto GetWaterInfo = 0xda1d70;
		constexpr auto GetWaterInfoFromVolumes = 0xda1b20;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x1862010;
		constexpr auto Asin = 0x1862020;
		constexpr auto Atan = 0x1862040;
		constexpr auto Atan2 = 0x1862030;
		constexpr auto Ceiling = 0x1862050;
		constexpr auto Cos = 0x1862060;
		constexpr auto Cosh = 0x1862070;
		constexpr auto Floor = 0x18620a0;
		constexpr auto InternalRound = 0x18620b0;
		constexpr auto InternalTruncate = 0x1862310;
		constexpr auto Sin = 0x1862da0;
		constexpr auto Tan = 0x1862de0;
		constexpr auto Sinh = 0x1862db0;
		constexpr auto Round = 0x1862a80;
		constexpr auto SplitFractionDouble = 0x1862dc0;
		constexpr auto Truncate = 0x1862df0;
		constexpr auto Sqrt = 0x1862dd0;
		constexpr auto Log = 0x18624e0;
		constexpr auto Log10 = 0x1862370;
		constexpr auto Exp = 0x1862090;
		constexpr auto Pow = 0x18628f0;
		constexpr auto Abs = 0x1861f40;
		constexpr auto AbsHelper = 0x1861de0;
		constexpr auto Max = 0x1862590;
		constexpr auto Min = 0x18628e0;
		constexpr auto Sign = 0x1862d60;
		constexpr auto DivRem = 0x1862080;
		constexpr auto cctor = 0x1862ea0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1b619e0;
		constexpr auto IsPowerOfTwo = 0x1b61e00;
		constexpr auto NextPowerOfTwo = 0x1b625d0;
		constexpr auto GammaToLinearSpace = 0x1b61cd0;
		constexpr auto LinearToGammaSpace = 0x1b62060;
		constexpr auto FloatToHalf = 0x1b61bd0;
		constexpr auto HalfToFloat = 0x1b61d10;
		constexpr auto PerlinNoise = 0x1b62610;
		constexpr auto Sin = 0x1b62860;
		constexpr auto Cos = 0x1b61a20;
		constexpr auto Tan = 0x1b62d40;
		constexpr auto Asin = 0x1b61780;
		constexpr auto Acos = 0x1b61670;
		constexpr auto Atan = 0x1b61860;
		constexpr auto Atan2 = 0x1b617e0;
		constexpr auto Sqrt = 0x1b62ce0;
		constexpr auto Abs = 0x1b61610;
		constexpr auto Min = 0x1b62270;
		constexpr auto Max = 0x1b621e0;
		constexpr auto Pow = 0x1b62660;
		constexpr auto Exp = 0x1b61b70;
		constexpr auto Log = 0x1b62160;
		constexpr auto Log10 = 0x1b620a0;
		constexpr auto Ceil = 0x1b61920;
		constexpr auto Floor = 0x1b61c70;
		constexpr auto Round = 0x1b627e0;
		constexpr auto CeilToInt = 0x1b618c0;
		constexpr auto FloorToInt = 0x1b61c10;
		constexpr auto RoundToInt = 0x1b62780;
		constexpr auto Sign = 0x1b62840;
		constexpr auto Clamp = 0x1b619a0;
		constexpr auto Clamp01 = 0x1b61980;
		constexpr auto Lerp = 0x1b61fc0;
		constexpr auto LerpUnclamped = 0x1b61fa0;
		constexpr auto LerpAngle = 0x1b61e40;
		constexpr auto MoveTowards = 0x1b624e0;
		constexpr auto MoveTowardsAngle = 0x1b62280;
		constexpr auto SmoothStep = 0x1b62c20;
		constexpr auto Approximately = 0x1b616d0;
		constexpr auto SmoothDamp = 0x1b62a50;
		constexpr auto Repeat = 0x1b626e0;
		constexpr auto InverseLerp = 0x1b61d50;
		constexpr auto DeltaAngle = 0x1b61a80;
		constexpr auto cctor = 0x1b62da0;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x270;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c8;
		constexpr auto __menuOption_Menu_OpenDoor = 0x320;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x378;
		constexpr auto knockEffect = 0x3d0;
		constexpr auto canTakeLock = 0x3d8;
		constexpr auto hasHatch = 0x3d9;
		constexpr auto canTakeCloser = 0x3da;
		constexpr auto canTakeKnocker = 0x3db;
		constexpr auto canNpcOpen = 0x3dc;
		constexpr auto canHandOpen = 0x3dd;
		constexpr auto isSecurityDoor = 0x3de;
		constexpr auto vehiclePhysBoxes = 0x3e0;
		constexpr auto checkPhysBoxesOnOpen = 0x3e8;
		constexpr auto vehicleCollisionSfx = 0x3f0;
		constexpr auto ClosedColliderRoots = 0x3f8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xa9f140;
		constexpr auto get_HasMenuOptions = 0xaa0c20;
		constexpr auto OnRpcMessage = 0xaa0570;
		constexpr auto ResetState = 0xaa09c0;
		constexpr auto HasSlot = 0xa9fd30;
		constexpr auto CanPickup = 0xa9efd0;
		constexpr auto Menu_OpenDoor = 0xaa0120;
		constexpr auto Menu_OpenDoor_Proxy = 0xaa0000;
		constexpr auto Menu_OpenDoorStart = 0xa9ffc0;
		constexpr auto Menu_OpenDoor_ShowIf = 0xaa00e0;
		constexpr auto Menu_CloseDoor = 0xa9fed0;
		constexpr auto Menu_CloseDoor_Proxy = 0xa9fdb0;
		constexpr auto Menu_CloseDoorStart = 0xa9fd70;
		constexpr auto Menu_CloseDoor_ShowIf = 0xa9fe90;
		constexpr auto Menu_KnockDoor = 0xa9ff80;
		constexpr auto Menu_KnockDoor_ShowIf = 0xa9ff10;
		constexpr auto Menu_ToggleHatch = 0xaa0170;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xaa0160;
		constexpr auto NeedsCrosshair = 0x5d6d00;
		constexpr auto OnDoorInterrupted = 0xaa01b0;
		constexpr auto ReverseDoorAnimation = 0xaa09d0;
		constexpr auto BoundsPadding = 0x8b3470;
		constexpr auto OnObjects = 0x45c510;
		constexpr auto OnEmpty = 0x45c510;
		constexpr auto OnFlagsChanged = 0xaa0440;
		constexpr auto ctor = 0xaa0c00;
		constexpr auto cctor = 0xaa0b90;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x1b6bb20;
		constexpr auto GetHashCode = 0x1b6bb10;
		constexpr auto Equals = 0x1b6b730;
		constexpr auto op_Implicit = 0x1b6cfb0;
		constexpr auto CompareBaseObjects = 0x1b6b440;
		constexpr auto IsNativeObjectAlive = 0x1b6cc00;
		constexpr auto GetCachedPtr = 0x1ab5670;
		constexpr auto get_name = 0x1b6cdd0;
		constexpr auto set_name = 0x1b6d230;
		constexpr auto Instantiate = 0x1b6c680;
		constexpr auto Destroy = 0x1b6b630;
		constexpr auto DestroyImmediate = 0x1b6b5e0;
		constexpr auto FindObjectsOfType = 0x1b6bad0;
		constexpr auto DontDestroyOnLoad = 0x1b6b6f0;
		constexpr auto get_hideFlags = 0x1b6cd90;
		constexpr auto set_hideFlags = 0x1b6d1f0;
		constexpr auto CheckNullArgument = 0x1b6b3d0;
		constexpr auto FindObjectOfType = 0x1b6ba40;
		constexpr auto ToString = 0x1b6cca0;
		constexpr auto op_Equality = 0x1b6ce40;
		constexpr auto op_Inequality = 0x1b6d080;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x1b6bc90;
		constexpr auto Internal_CloneSingle = 0x1b6c9c0;
		constexpr auto Internal_CloneSingleWithParent = 0x1b6c960;
		constexpr auto Internal_InstantiateSingle = 0x1b6cb70;
		constexpr auto Internal_InstantiateSingleWithParent = 0x1b6ca70;
		constexpr auto GetName = 0x1b6bc50;
		constexpr auto SetName = 0x1b6cc50;
		constexpr auto FindObjectFromInstanceID = 0x1b6ba00;
		constexpr auto ctor = 0x3ef140;
		constexpr auto cctor = 0x1b6cd50;
		constexpr auto Internal_InstantiateSingle_Injected = 0x1b6cb10;
		constexpr auto Internal_InstantiateSingleWithParent_Injected = 0x1b6ca00;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x280;
		constexpr auto canAiHearIt = 0x281;
		constexpr auto onlyThrowAsProjectile = 0x282;
		constexpr auto damageProperties = 0x288;
		constexpr auto damageTypes = 0x290;
		constexpr auto maxDistance = 0x298;
		constexpr auto attackRadius = 0x29c;
		constexpr auto isAutomatic = 0x2a0;
		constexpr auto blockSprintOnAttack = 0x2a1;
		constexpr auto strikeFX = 0x2a8;
		constexpr auto useStandardHitEffects = 0x2b0;
		constexpr auto aiStrikeDelay = 0x2b4;
		constexpr auto swingEffect = 0x2b8;
		constexpr auto materialStrikeFX = 0x2c0;
		constexpr auto heartStress = 0x2c8;
		constexpr auto gathering = 0x2d0;
		constexpr auto throwReady = 0x2d8;

		constexpr auto OnRpcMessage = 0xaf7f00;
		constexpr auto GetInheritedVelocity = 0x9a4910;
		constexpr auto DoThrow = 0xaf71f0;
		constexpr auto CreateProjectile = 0xaf6bb0;
		constexpr auto GetAttackStats = 0xaf7910;
		constexpr auto DoAttackShared = 0xaf6d60;
		constexpr auto OnInput = 0xaf7b20;
		constexpr auto get_CanAttack = 0x5d6d00;
		constexpr auto get_CanThrow = 0x5d6d00;
		constexpr auto ClientAttack = 0x45c510;
		constexpr auto OnHolstered = 0xaf7b00;
		constexpr auto ProcessAttack = 0xaf80b0;
		constexpr auto DoAttack = 0xaf6fb0;
		constexpr auto DoViewmodelImpact = 0xaf7880;
		constexpr auto OnViewmodelEvent = 0xaf7ff0;
		constexpr auto ProcessSpectatorViewmodel = 0xaf83f0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xaf8340;
		constexpr auto GetGatherInfoFromIndex = 0xaf7970;
		constexpr auto CanHit = 0x5d6d00;
		constexpr auto TotalDamage = 0xaf84a0;
		constexpr auto CanBeUsedInWater = 0x5d6d00;
		constexpr auto GetStrikeEffectPath = 0xaf79a0;
		constexpr auto ctor = 0xaf8600;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0xae59e0;
		constexpr auto GetSpreadScalar = 0xae5a20;
		constexpr auto GetIndexedSpreadScalar = 0xae5950;
		constexpr auto GetAverageVelocity = 0xae5940;
		constexpr auto GetMinVelocity = 0xae59d0;
		constexpr auto GetMaxVelocity = 0xae59c0;
		constexpr auto IsAmmo = 0xae5a80;
		constexpr auto ServerProjectileHit = 0xae5a90;
		constexpr auto ctor = 0xae5b60;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto curvesAsScalar = 0x51;
		constexpr auto shotsUntilMax = 0x54;
		constexpr auto maxRecoilRadius = 0x58;
		constexpr auto overrideAimconeWithCurve = 0x5c;
		constexpr auto aimconeCurveScale = 0x60;
		constexpr auto aimconeCurve = 0x68;
		constexpr auto aimconeProbabilityCurve = 0x70;
		constexpr auto newRecoilOverride = 0x78;

		constexpr auto GetRecoil = 0xa305e0;
		constexpr auto ctor = 0xa30660;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventoryGrabSound = 0x68;
		constexpr auto inventoryDropSound = 0x70;
		constexpr auto physImpactSoundDef = 0x78;
		constexpr auto condition = 0x80;
		constexpr auto hidden = 0x98;
		constexpr auto flags = 0x9c;
		constexpr auto steamItem = 0xa0;
		constexpr auto steamDlc = 0xa8;
		constexpr auto Parent = 0xb0;
		constexpr auto worldModelPrefab = 0xb8;
		constexpr auto isRedirectOf = 0xc0;
		constexpr auto redirectVendingBehaviour = 0xc8;
		constexpr auto itemMods = 0xd0;
		constexpr auto Traits = 0xd8;
		constexpr auto skins = 0xe0;
		constexpr auto _skins2 = 0xe8;
		constexpr auto panel = 0xf0;
		constexpr auto ItemModWearablek__BackingField = 0xf8;
		constexpr auto isHoldablek__BackingField = 0x100;
		constexpr auto isUsablek__BackingField = 0x101;
		constexpr auto CraftableWithSkink__BackingField = 0x102;
		constexpr auto Children = 0x108;

		constexpr auto get_skins2 = 0xadc400;
		constexpr auto InvalidateWorkshopSkinCache = 0xadc150;
		constexpr auto get_Blueprint = 0xadc260;
		constexpr auto get_craftingStackable = 0xadc320;
		constexpr auto HasFlag = 0xadbed0;
		constexpr auto Initialize = 0xadbee0;
		constexpr auto GetDisplayName = 0xadbdd0;
		constexpr auto GetDescriptionText = 0xadbd00;
		constexpr auto FindIconSprite = 0xadb9a0;
		constexpr auto get_isWearable = 0xadc3a0;
		constexpr auto get_ItemModWearable = 0xadc310;
		constexpr auto set_ItemModWearable = 0xadc610;
		constexpr auto get_isHoldable = 0xadc380;
		constexpr auto set_isHoldable = 0xadc620;
		constexpr auto get_isUsable = 0xadc390;
		constexpr auto set_isUsable = 0xadc630;
		constexpr auto get_HasSkins = 0xadc2b0;
		constexpr auto get_CraftableWithSkin = 0xadc2a0;
		constexpr auto set_CraftableWithSkin = 0xadc600;
		constexpr auto ctor = 0xadc1f0;
		constexpr auto Initializeb__44_0 = 0xadc170;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto toggleAds = 0x86;
		constexpr auto lastAdsEntity = 0x88;
		constexpr auto pendingMouseDelta = 0x8c;
		constexpr auto offsetAngles = 0x98;
		constexpr auto ignoredButtons = 0xa4;
		constexpr auto hasKeyFocus = 0xa8;

		constexpr auto OnDisable = 0xc24520;
		constexpr auto FrameUpdate = 0xc236c0;
		constexpr auto CanToggleAds = 0xc230e0;
		constexpr auto Flip = 0xc23550;
		constexpr auto ResetMouseDelta = 0xc245a0;
		constexpr auto AddMouseDelta = 0xc21940;
		constexpr auto AdjustMouseMovement = 0xc21c10;
		constexpr auto UpdateViewAngles = 0xc247a0;
		constexpr auto ApplyViewAngles = 0xc21e50;
		constexpr auto SetViewVars = 0xc24680;
		constexpr auto FinalizeRecoil = 0xc23370;
		constexpr auto ResetOffsetAngles = 0xc24610;
		constexpr auto ClientAngles = 0xc23340;
		constexpr auto ClientLookVars = 0xc23350;
		constexpr auto HeadAngles = 0xc23b10;
		constexpr auto HeadLookVars = 0xc23b20;
		constexpr auto ModifyInputState = 0xc24490;
		constexpr auto IsButtonDownNative = 0xc23f90;
		constexpr auto BuildInputState = 0xc229f0;
		constexpr auto IsAiming = 0xc23e40;
		constexpr auto UpdateButton = 0xc24710;
		constexpr auto IgnoreCurrentButtons = 0xc23b40;
		constexpr auto get_hasOnlyPartialKeyInput = 0xc24ab0;
		constexpr auto get_hasNoKeyInput = 0xc24920;
		constexpr auto UpdateKeyFocus = 0xc24780;
		constexpr auto IgnoreCurrentKeys = 0xc23c50;
		constexpr auto ctor = 0xc248b0;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto hasHeldEntity = 0x2f4;
		constexpr auto wasMountedRightAim = 0x2f5;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xc31040;
		constexpr auto SpineIk = 0xc31460;
		constexpr auto ParentArmsToCamera = 0xc2f250;
		constexpr auto OnAnimatorIK = 0xc2e8c0;
		constexpr auto HandIK = 0xc2cf20;
		constexpr auto FootIK = 0xc29730;
		constexpr auto HeadIK = 0xc2d380;
		constexpr auto get_ShouldDoLegs = 0xc36d50;
		constexpr auto get_ShouldShowHands = 0xc36dd0;
		constexpr auto ClearLegs = 0xc285a0;
		constexpr auto RebuildLegs = 0xc2fc00;
		constexpr auto InitializeLegSpineBones = 0xc2da60;
		constexpr auto UpdateLegsBeforeRender = 0xc32c70;
		constexpr auto UpdateLegsDisable = 0xc33b60;
		constexpr auto AddLegRenderer = 0xc27ad0;
		constexpr auto SwapLegBone = 0xc31e50;
		constexpr auto GetFlat = 0xc2c390;
		constexpr auto RebuildAll = 0xc2f800;
		constexpr auto get_overrideSkinSeed = 0xc370b0;
		constexpr auto set_overrideSkinSeed = 0xc370f0;
		constexpr auto get_IsFemale = 0xc36d00;
		constexpr auto get_SkinSet = 0xc36eb0;
		constexpr auto get_AimAngles = 0xc36bb0;
		constexpr auto set_AimAngles = 0xc370c0;
		constexpr auto get_LookAngles = 0xc36d40;
		constexpr auto set_LookAngles = 0xc370e0;
		constexpr auto get_GestureAllowsSpineMovement = 0xc36c60;
		constexpr auto get_GestureAllowsRootMotion = 0xc36bc0;
		constexpr auto get_IsFirstPerson = 0xc36d10;
		constexpr auto get_IsNpc = 0xc36d30;
		constexpr auto set_IsNpc = 0xc370d0;
		constexpr auto get_multiMesh = 0xc37010;
		constexpr auto get_animator = 0xc36ed0;
		constexpr auto get_lodGroup = 0xc36f70;
		constexpr auto GetTargetVelocity = 0xc2cdc0;
		constexpr auto Awake = 0xc28500;
		constexpr auto OnEnable = 0xc2ece0;
		constexpr auto OnDisable = 0xc2e9f0;
		constexpr auto SetDefaultAnimatorWeights = 0xc30920;
		constexpr auto UpdateMultiMesh = 0xc34200;
		constexpr auto UpdateCensorship = 0xc32390;
		constexpr auto UpdateCollider = 0xc32810;
		constexpr auto UpdateModelState = 0xc341b0;
		constexpr auto UpdatePosition = 0xc34c70;
		constexpr auto UpdateRotation = 0xc34d90;
		constexpr auto UpdateLocalVelocity = 0xc340e0;
		constexpr auto UpdateVelocity = 0xc35710;
		constexpr auto UpdateParameters = 0xc34390;
		constexpr auto UpdateFrom = 0xc32a80;
		constexpr auto UpdateGlobalShaderConstants = 0xc32ae0;
		constexpr auto LateCycle = 0xc2e240;
		constexpr auto FrameUpdate = 0xc2b9a0;
		constexpr auto FrameUpdate_Default = 0xc2afc0;
		constexpr auto FrameUpdate_Sleeping = 0xc2b6d0;
		constexpr auto FrameUpdate_Incapacitated = 0xc2b130;
		constexpr auto FrameUpdate_OnLadder = 0xc2b400;
		constexpr auto GetAim360 = 0xc2c120;
		constexpr auto UpdateVehicleAim360 = 0xc35220;
		constexpr auto ResetCurrentState = 0xc307d0;
		constexpr auto DoAimingSounds = 0xc28ed0;
		constexpr auto SetAimSounds = 0xc308e0;
		constexpr auto SetMountedLookAtWeight = 0xc31050;
		constexpr auto SetMountedAnimationSpeed = 0xc31030;
		constexpr auto UpdateLocalPlayerPosition = 0xc33d90;
		constexpr auto Attack = 0xc28480;
		constexpr auto AltAttack = 0xc28140;
		constexpr auto Deploy = 0xc28e20;
		constexpr auto Reload = 0xc30550;
		constexpr auto Holster = 0xc2d9e0;
		constexpr auto Flinch = 0xc296d0;
		constexpr auto SetReactionAnim = 0xc31060;
		constexpr auto OnReactionEnded = 0xc2f220;
		constexpr auto Throw = 0xc32180;
		constexpr auto Gesture = 0xc2bd90;
		constexpr auto FadeInGestureUpperBodyLayer = 0xc29130;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xc29420;
		constexpr auto FadeInGestureFullBodyLayer = 0xc29010;
		constexpr auto FadeOutGestureFullBodyLayer = 0xc29250;
		constexpr auto AnimatorWarmup = 0xc281f0;
		constexpr auto AlwaysAnimate = 0xc281c0;
		constexpr auto SetHoldType = 0xc30cb0;
		constexpr auto SetHasHeldEntity = 0xc30ca0;
		constexpr auto FadeOutGestureLayer = 0xc293b0;
		constexpr auto SetGesture = 0xc30a50;
		constexpr auto FadeOutPlayerGestureLayers = 0xc29580;
		constexpr auto StopGesture = 0xc31d50;
		constexpr auto PlayCinematic = 0xc2f670;
		constexpr auto StopCinematic = 0xc31cf0;
		constexpr auto SetSpeedOverride = 0xc31440;
		constexpr auto GetReplacementUnderwear = 0xc2cd00;
		constexpr auto RemoveUnderwearParts = 0xc306a0;
		constexpr auto Clear = 0xc28700;
		constexpr auto Rebuild = 0xc2ffc0;
		constexpr auto AddPart = 0xc27e60;
		constexpr auto RemovePart = 0xc305d0;
		constexpr auto HasPart = 0xc2d2c0;
		constexpr auto IsBarefoot = 0xc2e1b0;
		constexpr auto GetSkinColor = 0xc2cd40;
		constexpr auto SetSkinProperties = 0xc31320;
		constexpr auto RefreshUnderwear = 0xc301c0;
		constexpr auto ForceModelSeed = 0xc2ad90;
		constexpr auto FindBone = 0xc296a0;
		constexpr auto GetBones = 0xc2c360;
		constexpr auto GetFootPlacement = 0xc2c3d0;
		constexpr auto ApplyVisibility = 0xc28250;
		constexpr auto ToggleUpdateOffscreen = 0xc32220;
		constexpr auto OnParentDestroying = 0xc2f120;
		constexpr auto WorkshopPreviewSetup = 0xc35b20;
		constexpr auto ctor = 0xc36a00;
		constexpr auto cctor = 0xc364c0;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x22c0e50;
		constexpr auto Dispose = 0x22c0a50;
		constexpr auto EnterPool = 0x119b020;
		constexpr auto LeavePool = 0x119b050;
		constexpr auto CopyTo = 0x22bef60;
		constexpr auto Copy = 0x22bf1a0;
		constexpr auto Deserialize = 0x22bff50;
		constexpr auto DeserializeLengthDelimited = 0x22bf220;
		constexpr auto DeserializeLength = 0x22bf6d0;
		constexpr auto FromProto = 0x22c0ad0;
		constexpr auto WriteToStream = 0x22c1d10;
		constexpr auto WriteToStreamDelta = 0x22c1d30;
		constexpr auto ReadFromStream = 0x22c0e30;
		constexpr auto SerializeDelta = 0x22c1300;
		constexpr auto Serialize = 0x22c1920;
		constexpr auto ToProtoBytes = 0x22c1d00;
		constexpr auto ToProto = 0x22c1d10;
		constexpr auto SerializeToBytes = 0x22c1810;
		constexpr auto SerializeLengthDelimited = 0x22c1760;
		constexpr auto ctor = 0x11497b0;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xc25910;
		constexpr auto Initialize = 0xc25560;
		constexpr auto DoDestroy = 0xc24d40;
		constexpr auto ClientInit = 0xc24cc0;
		constexpr auto UpdatedItemContainer = 0xc25d60;
		constexpr auto FindItemUID = 0xc25380;
		constexpr auto FindItemID = 0xc250a0;
		constexpr auto FindBySubEntityID = 0xc24e20;
		constexpr auto FindItemIDs = 0xc25290;
		constexpr auto FindContainer = 0xc24ef0;
		constexpr auto GetContainer = 0xc254e0;
		constexpr auto Load = 0xc257c0;
		constexpr auto GetAmount = 0xc25460;
		constexpr auto AllItems = 0xc24bf0;
		constexpr auto AllItemsNoAlloc = 0xc24b20;
		constexpr auto FindAmmo = 0xc24dd0;
		constexpr auto HasAmmo = 0xc25500;
		constexpr auto ctor = 0xc25f50;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0xad9d40;
		constexpr auto SetFlag = 0xadadf0;
		constexpr auto IsLocked = 0xad9f10;
		constexpr auto PlayerItemInputBlocked = 0xadaa30;
		constexpr auto get_HasLimitedAllowedItems = 0xadb1e0;
		constexpr auto OnChanged = 0xada990;
		constexpr auto ClientInitialize = 0xad8e70;
		constexpr auto FindItemByUID = 0xad9420;
		constexpr auto IsFull = 0xad9ec0;
		constexpr auto IsEmpty = 0xad9e80;
		constexpr auto CanAccept = 0xad8d40;
		constexpr auto GetMaxTransferAmount = 0xad99e0;
		constexpr auto SetOnlyAllowedItem = 0xadae10;
		constexpr auto SetOnlyAllowedItems = 0xadaed0;
		constexpr auto Insert = 0xad9d50;
		constexpr auto SlotTaken = 0xadb060;
		constexpr auto GetSlot = 0xad9ba0;
		constexpr auto FindPosition = 0xad9710;
		constexpr auto Clear = 0xad8d90;
		constexpr auto Kill = 0xad9f20;
		constexpr auto GetAmount = 0xad9860;
		constexpr auto FindItemByItemID = 0xad92b0;
		constexpr auto FindItemsByItemName = 0xad95c0;
		constexpr auto FindBySubEntityID = 0xad9050;
		constexpr auto FindItemsByItemID = 0xad9510;
		constexpr auto Save = 0xadaa40;
		constexpr auto Load = 0xada1e0;
		constexpr auto GetOwnerPlayer = 0x5c9170;
		constexpr auto ContainerMaxStackSize = 0xad8eb0;
		constexpr auto FindAmmo = 0xad8f90;
		constexpr auto HasAmmo = 0xad9c70;
		constexpr auto GetAmmoAmount = 0xad97a0;
		constexpr auto TotalItemAmount = 0xadb080;
		constexpr auto ContentsHash = 0xad8ec0;
		constexpr auto FindContainer = 0xad91c0;
		constexpr auto CanAcceptItem = 0xad88d0;
		constexpr auto ctor = 0xadb130;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto cookTimeLeft = 0x68;
		constexpr auto progressBar = 0x6c;
		constexpr auto OnDirty = 0x70;
		constexpr auto flags = 0x78;
		constexpr auto contents = 0x80;
		constexpr auto parent = 0x88;
		constexpr auto worldEnt = 0x90;
		constexpr auto heldEntity = 0xa0;

		constexpr auto UpdateAmountDisplay = 0xaeaa30;
		constexpr auto FormatAmount = 0xae94b0;
		constexpr auto set_condition = 0xaeb9f0;
		constexpr auto get_condition = 0x8820c0;
		constexpr auto set_maxCondition = 0xaeba70;
		constexpr auto get_maxCondition = 0x882090;
		constexpr auto get_maxConditionNormalized = 0xaeb7a0;
		constexpr auto get_conditionNormalized = 0xaeb330;
		constexpr auto set_conditionNormalized = 0xaeb950;
		constexpr auto get_hasCondition = 0xaeb430;
		constexpr auto get_isBroken = 0xaeb670;
		constexpr auto get_despawnMultiplier = 0xaeb370;
		constexpr auto get_blueprintTargetDef = 0xaeb300;
		constexpr auto get_blueprintTarget = 0xaeb320;
		constexpr auto set_blueprintTarget = 0xaeb8c0;
		constexpr auto get_blueprintAmount = 0xaeb2f0;
		constexpr auto set_blueprintAmount = 0xaeb8b0;
		constexpr auto IsBlueprint = 0xae99f0;
		constexpr auto add_OnDirty = 0xaeb230;
		constexpr auto remove_OnDirty = 0xaeb810;
		constexpr auto HasFlag = 0xae99e0;
		constexpr auto SetFlag = 0xaea530;
		constexpr auto IsOn = 0xae9c20;
		constexpr auto IsOnFire = 0xae9c10;
		constexpr auto IsCooking = 0xae9bd0;
		constexpr auto IsLocked = 0xae9be0;
		constexpr auto get_parentItem = 0xaeb7d0;
		constexpr auto MarkDirty = 0xaea070;
		constexpr auto OnChanged = 0xaea160;
		constexpr auto CollectedForCrafting = 0x45c510;
		constexpr auto ReturnedFromCancelledCraft = 0x45c510;
		constexpr auto IsChildContainer = 0xae9a40;
		constexpr auto IsBusy = 0xae9a10;
		constexpr auto BusyFor = 0xae9030;
		constexpr auto Remove = 0xaea310;
		constexpr auto DoRemove = 0xae92f0;
		constexpr auto SwitchOnOff = 0xaea6c0;
		constexpr auto LockUnlock = 0xae9ff0;
		constexpr auto get_temperature = 0xaeb7f0;
		constexpr auto GetOwnerPlayer = 0xae97f0;
		constexpr auto CanBeHeld = 0xae9060;
		constexpr auto CanStack = 0xae90a0;
		constexpr auto IsValid = 0xae9c30;
		constexpr auto SetWorldEntity = 0xaea550;
		constexpr auto OnMovedToWorld = 0xaea280;
		constexpr auto GetWorldEntity = 0xae98a0;
		constexpr auto GetHeldEntity = 0xae97d0;
		constexpr auto BeltBarSelect = 0xae8f90;
		constexpr auto GetTotalUISlots = 0xae9810;
		constexpr auto GetFilledUISlots = 0xae9740;
		constexpr auto HasAmmo = 0xae98c0;
		constexpr auto FindAmmo = 0xae9350;
		constexpr auto GetAmmoAmount = 0xae9610;
		constexpr auto ToString = 0xaea740;
		constexpr auto FindItem = 0xae9490;
		constexpr auto MaxStackable = 0xaea0d0;
		constexpr auto get_iconSprite = 0xaeb4d0;
		constexpr auto get_isLoadingIconSprite = 0xaeb6a0;
		constexpr auto get_Traits = 0xaeb2d0;
		constexpr auto Save = 0xaea370;
		constexpr auto Load = 0xae9c40;
		constexpr auto ctor = 0xaeb210;
		constexpr auto cctor = 0xaeb140;
		constexpr auto get_iconSpriteb__97_0 = 0xaeaa20;
		constexpr auto get_isLoadingIconSpriteb__99_0 = 0xaeaa20;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x881620;
		constexpr auto BuildBoneDictionary = 0x880d90;
		constexpr auto GetSkin = 0x681550;
		constexpr auto FindBoneInternal = 0x880e80;
		constexpr auto FindBone = 0x880f10;
		constexpr auto FindBoneID = 0x880e40;
		constexpr auto GetBones = 0x881120;
		constexpr auto FindClosestBone = 0x880f80;
		constexpr auto get_lodGroup = 0x881e10;
		constexpr auto OnDisable = 0x8814f0;
		constexpr auto SyncBones = 0x8819f0;
		constexpr auto Trigger = 0x881d60;
		constexpr auto GetTransform = 0x881150;
		constexpr auto ApplyVisibility = 0x880c00;
		constexpr auto PreProcess = 0x881630;
		constexpr auto ctor = 0x3ed250;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x280;
		constexpr auto healDurationOther = 0x284;
		constexpr auto healDurationOtherWounded = 0x288;
		constexpr auto maxDistanceOther = 0x28c;
		constexpr auto canUseOnOther = 0x290;
		constexpr auto canRevive = 0x291;
		constexpr auto useTarget = 0x298;
		constexpr auto resetTime = 0x2a0;

		constexpr auto OnRpcMessage = 0xa4f820;
		constexpr auto GetTarget = 0xa4f0c0;
		constexpr auto AnyPressed = 0xa4eff0;
		constexpr auto OnInput = 0xa4f470;
		constexpr auto OnViewmodelEvent = 0xa4fbf0;
		constexpr auto Reset = 0xa4fe00;
		constexpr auto OnDeploy = 0xa4f410;
		constexpr auto OnHolstered = 0xa4f440;
		constexpr auto ProcessSpectatorViewmodelEvent = 0xa4fd40;
		constexpr auto ctor = 0xa4fe20;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x168;
		constexpr auto punchAdded = 0x170;
		constexpr auto lastPunchTime = 0x17c;
		constexpr auto worldModelAnimator = 0x180;
		constexpr auto thirdPersonDeploySound = 0x188;
		constexpr auto thirdPersonAimSound = 0x190;
		constexpr auto thirdPersonAimEndSound = 0x198;
		constexpr auto viewModel = 0x1a0;
		constexpr auto isDeployed = 0x1a8;
		constexpr auto nextExamineTime = 0x1ac;
		constexpr auto handBone = 0x1b0;
		constexpr auto HoldAnimationOverride = 0x1b8;
		constexpr auto isBuildingTool = 0x1c0;
		constexpr auto hostileScore = 0x1c4;
		constexpr auto holsterInfo = 0x1c8;
		constexpr auto HeldCameraMode = 0x1d0;
		constexpr auto FirstPersonArmOffset = 0x1d4;
		constexpr auto FirstPersonArmRotation = 0x1e0;
		constexpr auto FirstPersonRotationStrength = 0x1ec;
		constexpr auto ownerItemUID = 0x1f0;

		constexpr auto OnRpcMessage = 0x808bd0;
		constexpr auto AddPunch = 0x807e20;
		constexpr auto CL_Punch = 0x807ef0;
		constexpr auto DoRecoilCompensation = 0x45c510;
		constexpr auto GetAddedPunch = 0x808220;
		constexpr auto SimPunches = 0x8093c0;
		constexpr auto ClientInit = 0x807fa0;
		constexpr auto GetFovOverride = 0x808240;
		constexpr auto DoNetworkDestroy = 0x808070;
		constexpr auto PostLateClientCycle = 0x45c510;
		constexpr auto PostNetworkUpdate = 0x809080;
		constexpr auto UpdateHolsteredOffset = 0x809890;
		constexpr auto EditViewAngles = 0x45c510;
		constexpr auto ClampPitch = 0x45c510;
		constexpr auto OnFrame = 0x808a40;
		constexpr auto OnInput = 0x45c510;
		constexpr auto Examine = 0x8080b0;
		constexpr auto OnDeploy = 0x808780;
		constexpr auto OnDeployed = 0x808a30;
		constexpr auto OnHolster = 0x808a60;
		constexpr auto OnHolstered = 0x808bc0;
		constexpr auto OnViewmodelEvent = 0x45c510;
		constexpr auto OnReliableEvent = 0x45c510;
		constexpr auto ModifyCamera = 0x45c510;
		constexpr auto ShouldDestroyImmediately = 0x5d6d00;
		constexpr auto UpdatePlayerModel = 0x80a090;
		constexpr auto ProcessPlayerModel = 0x45c510;
		constexpr auto GetHoldAnimations = 0x808430;
		constexpr auto GetMovementMultiplier = 0x5bd030;
		constexpr auto OnSpawnedForWorkshopPreview = 0x45c510;
		constexpr auto HeldEntityBlocksMovement = 0x599410;
		constexpr auto ProcessSpectatorViewmodel = 0x45c510;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x809310;
		constexpr auto get_hostile = 0x80a240;
		constexpr auto LightsOn = 0x808710;
		constexpr auto IsDeployed = 0x808700;
		constexpr auto GetOwnerPlayer = 0x808640;
		constexpr auto GetOwnerConnection = 0x808450;
		constexpr auto CanBeUsedInWater = 0x599410;
		constexpr auto BlocksGestures = 0x599410;
		constexpr auto GetOwnerItem = 0x808560;
		constexpr auto GetItem = 0x808440;
		constexpr auto GetOwnerItemDefinition = 0x8084e0;
		constexpr auto IsInstrument = 0x599410;
		constexpr auto Load = 0x808720;
		constexpr auto ctor = 0x80a150;
		constexpr auto cctor = 0x80a110;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1ab5670;
		constexpr auto set_text = 0x5b41e0;
		constexpr auto set_image = 0x5ccc40;
		constexpr auto get_tooltip = 0x1cb8b60;
		constexpr auto set_tooltip = 0x598770;
		constexpr auto ctor = 0x1cb8ad0;
		constexpr auto Temp = 0x1cb83b0;
		constexpr auto ClearStaticCache = 0x1cb8250;
		constexpr auto cctor = 0x1cb8680;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x168;
		constexpr auto skeletonProperties = 0x1c0;
		constexpr auto baseProtection = 0x1c8;
		constexpr auto startHealth = 0x1d0;
		constexpr auto pickup = 0x1d8;
		constexpr auto repair = 0x1f8;
		constexpr auto ShowHealthInfo = 0x220;
		constexpr auto lifestate = 0x224;
		constexpr auto sendsHitNotification = 0x228;
		constexpr auto sendsMeleeHitNotification = 0x229;
		constexpr auto markAttackerHostile = 0x22a;
		constexpr auto _health = 0x22c;
		constexpr auto _maxHealth = 0x230;
		constexpr auto faction = 0x234;
		constexpr auto deathTime = 0x238;
		constexpr auto lastNotifyFrame = 0x23c;

		constexpr auto GetMenuOptions = 0x84a090;
		constexpr auto get_HasMenuOptions = 0x84b280;
		constexpr auto OnRpcMessage = 0x84a7d0;
		constexpr auto HitNotify = 0x84a3f0;
		constexpr auto ClientInit = 0x849aa0;
		constexpr auto DisplayHealthInfo = 0x60b900;
		constexpr auto GetEyeTransform = 0x849f70;
		constexpr auto OnLifeStateChanged = 0x84a7a0;
		constexpr auto GetPickupCount = 0x84a3d0;
		constexpr auto CanPickup = 0x849a00;
		constexpr auto OnPickedUp = 0x45c510;
		constexpr auto OnPickedUpPreItemMove = 0x45c510;
		constexpr auto Menu_Pickup = 0x84a670;
		constexpr auto Menu_Pickup_TimeStart = 0x45c510;
		constexpr auto Menu_Pickup_If = 0x84a650;
		constexpr auto BuildCost = 0x849930;
		constexpr auto IsDead = 0x84a5a0;
		constexpr auto IsAlive = 0x84a590;
		constexpr auto GetFaction = 0x84a080;
		constexpr auto IsFriendly = 0x599410;
		constexpr auto get_SecondsSinceDeath = 0x84b340;
		constexpr auto get_healthFraction = 0x84b360;
		constexpr auto ResetState = 0x84ae10;
		constexpr auto DestroyShared = 0x849b80;
		constexpr auto GetThreatLevel = 0x5ed100;
		constexpr auto PenetrationResistance = 0x84ad80;
		constexpr auto ScaleDamage = 0x84af10;
		constexpr auto SkeletonLookup = 0x84b050;
		constexpr auto Load = 0x84a5b0;
		constexpr auto get_health = 0x84a3e0;
		constexpr auto set_health = 0x84b3b0;
		constexpr auto Health = 0x84a3e0;
		constexpr auto MaxHealth = 0x64d1a0;
		constexpr auto StartHealth = 0x59e630;
		constexpr auto StartMaxHealth = 0x84b100;
		constexpr auto SetMaxHealth = 0x84afc0;
		constexpr auto DoHitNotify = 0x849ba0;
		constexpr auto OnAttacked = 0x84a6b0;
		constexpr auto ctor = 0x84b120;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x907130;
		constexpr auto WasDown = 0x907200;
		constexpr auto IsAnyDown = 0x907100;
		constexpr auto WasJustPressed = 0x907220;
		constexpr auto WasJustReleased = 0x907260;
		constexpr auto SwallowButton = 0x9071f0;
		constexpr auto AimAngle = 0x906ec0;
		constexpr auto MouseDelta = 0x907160;
		constexpr auto Flip = 0x907030;
		constexpr auto Clear = 0x906f80;
		constexpr auto ctor = 0x9072a0;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x228bee0;
		constexpr auto Dispose = 0x228bbe0;
		constexpr auto EnterPool = 0x119b020;
		constexpr auto LeavePool = 0x119b050;
		constexpr auto CopyTo = 0x228ac40;
		constexpr auto Copy = 0x228ac80;
		constexpr auto Deserialize = 0x228b310;
		constexpr auto DeserializeLengthDelimited = 0x228afa0;
		constexpr auto DeserializeLength = 0x228b020;
		constexpr auto FromProto = 0x228bc60;
		constexpr auto WriteToStream = 0x228c7b0;
		constexpr auto WriteToStreamDelta = 0x228c7d0;
		constexpr auto ReadFromStream = 0x228be20;
		constexpr auto SerializeDelta = 0x228bf80;
		constexpr auto Serialize = 0x228c540;
		constexpr auto ToProtoBytes = 0x228c7a0;
		constexpr auto ToProto = 0x228c7b0;
		constexpr auto SerializeToBytes = 0x228c430;
		constexpr auto SerializeLengthDelimited = 0x228c380;
		constexpr auto ctor = 0x11497b0;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x240;
		constexpr auto eyePositionOverride = 0x298;
		constexpr auto eyeCenterOverride = 0x2a0;
		constexpr auto pitchClamp = 0x2a8;
		constexpr auto yawClamp = 0x2b0;
		constexpr auto canWieldItems = 0x2b8;
		constexpr auto relativeViewAngles = 0x2b9;
		constexpr auto mountAnchor = 0x2c0;
		constexpr auto mountPose = 0x2c8;
		constexpr auto maxMountDistance = 0x2cc;
		constexpr auto dismountPositions = 0x2d0;
		constexpr auto checkPlayerLosOnMount = 0x2d8;
		constexpr auto disableMeshCullingForPlayers = 0x2d9;
		constexpr auto allowHeadLook = 0x2da;
		constexpr auto modifiesPlayerCollider = 0x2db;
		constexpr auto customPlayerCollider = 0x2dc;
		constexpr auto mountSoundDef = 0x2f0;
		constexpr auto swapSoundDef = 0x2f8;
		constexpr auto dismountSoundDef = 0x300;
		constexpr auto mountTimeStatType = 0x308;
		constexpr auto allowedGestures = 0x30c;
		constexpr auto canDrinkWhileMounted = 0x310;
		constexpr auto allowSleeperMounting = 0x311;
		constexpr auto animateClothInLocalSpace = 0x312;
		constexpr auto MountedCameraMode = 0x314;
		constexpr auto isMobile = 0x318;
		constexpr auto SideLeanAmount = 0x31c;

		constexpr auto GetMenuOptions = 0xafc770;
		constexpr auto get_HasMenuOptions = 0xafe840;
		constexpr auto OnRpcMessage = 0xafd560;
		constexpr auto CanHoldItems = 0xafbb70;
		constexpr auto GetMountedCameraMode = 0xafcad0;
		constexpr auto DirectlyMountable = 0x5d6d00;
		constexpr auto GetEyeOverride = 0xafc6e0;
		constexpr auto GetMountedBodyAngles = 0xafca80;
		constexpr auto ModifiesThirdPersonCamera = 0x599410;
		constexpr auto GetPitchClamp = 0x8e8680;
		constexpr auto GetYawClamp = 0x8e86a0;
		constexpr auto IsMounted = 0xafcd30;
		constexpr auto EyePositionForPlayer = 0xafc370;
		constexpr auto EyeCenterForPlayer = 0xafc270;
		constexpr auto WaterFactorForPlayer = 0xafe670;
		constexpr auto MaxVelocity = 0xafce70;
		constexpr auto PlayerIsMounted = 0xafdb60;
		constexpr auto OnClientInput = 0x45c510;
		constexpr auto ForceUpdatePlayerModel = 0x599410;
		constexpr auto UpdatePlayerModel = 0xafe0a0;
		constexpr auto ProcessPlayerModel = 0x45c510;
		constexpr auto SuppressHandsAnimationLayer = 0x599410;
		constexpr auto GetAnimationOverride = 0x5ed110;
		constexpr auto GetSpineLookAtWeight = 0x5bd030;
		constexpr auto GetMountedAnimationSpeed = 0x5ed100;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x5d6d00;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x65be00;
		constexpr auto ModifyThirdPersonEyeOffset = 0xafd030;
		constexpr auto LockThirdPersonOffset = 0xafce00;
		constexpr auto LocalPlayerIsMounted = 0xafcd40;
		constexpr auto VehicleParent = 0xafe5e0;
		constexpr auto get_IsSummerDlcVehicle = 0x599410;
		constexpr auto IsInstrument = 0x599410;
		constexpr auto UpdatePlayerRotation = 0xafe530;
		constexpr auto SetNetworkPosition = 0xafe070;
		constexpr auto UpdatePlayerPosition = 0xafe3c0;
		constexpr auto GetMountedRotation = 0xafcba0;
		constexpr auto GetMountedPosition = 0xafcae0;
		constexpr auto PlayerMounted = 0xafdc40;
		constexpr auto PlayerDismounted = 0xafd680;
		constexpr auto ClientOnPlayerDismounted = 0xafbb80;
		constexpr auto ClientOnPlayerMounted = 0xafbc20;
		constexpr auto OverrideViewAngles = 0xafd650;
		constexpr auto DoPlayerMovement = 0xafbe00;
		constexpr auto HoldToDismount = 0xafccb0;
		constexpr auto ClientRequestDismount = 0xafbcf0;
		constexpr auto Menu_Mount = 0xafcfc0;
		constexpr auto Menu_Mount_ShowIf = 0xafcf20;
		constexpr auto MountMenuVisible = 0xafd050;
		constexpr auto NearMountPoint = 0xafd0e0;
		constexpr auto ConvertVector = 0xafbd30;
		constexpr auto get_BlocksDoors = 0x5d6d00;
		constexpr auto ctor = 0xafe790;
		constexpr auto cctor = 0xafe720;
		constexpr auto DoPlayerMovementb__78_0 = 0xafbcf0;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionUpdateSpeed = 0x8;
		constexpr auto ReflectionResolution = 0xc;
		constexpr auto ReflectionUpdateInterval = 0x10;
		constexpr auto ReflectionTimeSlicing = 0x14;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x1301e90;
		constexpr auto get_Instance = 0x1301dc0;
		constexpr auto get_Initialized = 0xdb75e0;
		constexpr auto set_Initialized = 0xdb7ac0;
		constexpr auto get_Headless = 0x1301da0;
		constexpr auto get_Components = 0x843060;
		constexpr auto set_Components = 0x8430e0;
		constexpr auto get_Resources = 0x843030;
		constexpr auto set_Resources = 0x8430c0;
		constexpr auto get_IsDay = 0x1301ef0;
		constexpr auto set_IsDay = 0x13022a0;
		constexpr auto get_IsNight = 0x1301f00;
		constexpr auto set_IsNight = 0x13022b0;
		constexpr auto get_Radius = 0x1302180;
		constexpr auto get_Diameter = 0x1301d40;
		constexpr auto get_LerpValue = 0x6d0dc0;
		constexpr auto set_LerpValue = 0x6d0fb0;
		constexpr auto get_SunZenith = 0x1302240;
		constexpr auto set_SunZenith = 0x13024a0;
		constexpr auto get_SunAltitude = 0x13021c0;
		constexpr auto set_SunAltitude = 0x1302400;
		constexpr auto get_SunAzimuth = 0x13021d0;
		constexpr auto set_SunAzimuth = 0x1302410;
		constexpr auto get_MoonZenith = 0x1302130;
		constexpr auto set_MoonZenith = 0x13023f0;
		constexpr auto get_MoonAltitude = 0x1302090;
		constexpr auto set_MoonAltitude = 0x1302340;
		constexpr auto get_MoonAzimuth = 0x13020a0;
		constexpr auto set_MoonAzimuth = 0x1302350;
		constexpr auto get_SunsetTime = 0x1302260;
		constexpr auto set_SunsetTime = 0x13024c0;
		constexpr auto get_SunriseTime = 0x1302250;
		constexpr auto set_SunriseTime = 0x13024b0;
		constexpr auto get_LocalSiderealTime = 0x12becd0;
		constexpr auto set_LocalSiderealTime = 0x12bf4d0;
		constexpr auto get_LightZenith = 0x1301fb0;
		constexpr auto get_LightIntensity = 0x1301f80;
		constexpr auto get_SunVisibility = 0x1302230;
		constexpr auto set_SunVisibility = 0x1302490;
		constexpr auto get_MoonVisibility = 0x12beb20;
		constexpr auto set_MoonVisibility = 0x13023e0;
		constexpr auto get_SunDirection = 0x13021e0;
		constexpr auto set_SunDirection = 0x1302430;
		constexpr auto get_MoonDirection = 0x13020c0;
		constexpr auto set_MoonDirection = 0x1302370;
		constexpr auto get_LightDirection = 0x1301f60;
		constexpr auto set_LightDirection = 0x13022c0;
		constexpr auto get_LocalSunDirection = 0x1302070;
		constexpr auto set_LocalSunDirection = 0x1302320;
		constexpr auto get_LocalMoonDirection = 0x1302050;
		constexpr auto set_LocalMoonDirection = 0x1302300;
		constexpr auto get_LocalLightDirection = 0x1302030;
		constexpr auto set_LocalLightDirection = 0x13022e0;
		constexpr auto get_SunLightColor = 0x1302200;
		constexpr auto set_SunLightColor = 0x1302450;
		constexpr auto get_MoonLightColor = 0x13020f0;
		constexpr auto set_MoonLightColor = 0x13023a0;
		constexpr auto get_LightColor = 0x1301f10;
		constexpr auto get_SunRayColor = 0x1302220;
		constexpr auto set_SunRayColor = 0x1302470;
		constexpr auto get_MoonRayColor = 0x1302110;
		constexpr auto set_MoonRayColor = 0x13023c0;
		constexpr auto get_SunSkyColor = 0x10247e0;
		constexpr auto set_SunSkyColor = 0x1302480;
		constexpr auto get_MoonSkyColor = 0x1302120;
		constexpr auto set_MoonSkyColor = 0x13023d0;
		constexpr auto get_SunMeshColor = 0x1302210;
		constexpr auto set_SunMeshColor = 0x1302460;
		constexpr auto get_MoonMeshColor = 0x1302100;
		constexpr auto set_MoonMeshColor = 0x13023b0;
		constexpr auto get_SunCloudColor = 0xe0ba90;
		constexpr auto set_SunCloudColor = 0x1302420;
		constexpr auto get_MoonCloudColor = 0x13020b0;
		constexpr auto set_MoonCloudColor = 0x1302360;
		constexpr auto get_FogColor = 0x1301d80;
		constexpr auto set_FogColor = 0x1302280;
		constexpr auto get_GroundColor = 0x1301d90;
		constexpr auto set_GroundColor = 0x1302290;
		constexpr auto get_AmbientColor = 0x1301d30;
		constexpr auto set_AmbientColor = 0x1302270;
		constexpr auto get_MoonHaloColor = 0x13020e0;
		constexpr auto set_MoonHaloColor = 0x1302390;
		constexpr auto get_Probe = 0x1302160;
		constexpr auto get_ProbeInstance = 0x1302140;
		constexpr auto OrbitalToUnity = 0x12fa7d0;
		constexpr auto OrbitalToLocal = 0x12fa710;
		constexpr auto SampleAtmosphere = 0x12fb7e0;
		constexpr auto RenderToSphericalHarmonics = 0x12fb680;
		constexpr auto RenderToCubemap = 0x12fa8e0;
		constexpr auto RenderToProbe = 0x12faa20;
		constexpr auto ReflectionIsUpdating = 0x12fa8a0;
		constexpr auto UpdateProbeBlending = 0x12ff840;
		constexpr auto UpdateProbeProperties = 0x12ff930;
		constexpr auto SampleFogColor = 0x12fbb60;
		constexpr auto SampleSkyColor = 0x12fbe10;
		constexpr auto SampleEquatorColor = 0x12fbaa0;
		constexpr auto UpdateFog = 0x12ff7c0;
		constexpr auto UpdateAmbient = 0x12fd420;
		constexpr auto UpdateReflection = 0x1300360;
		constexpr auto DelayReflectionUpdate = 0x12f9fa0;
		constexpr auto LoadParameters = 0x12fa390;
		constexpr auto SaveParameters = 0x12fbf20;
		constexpr auto UpdateQualitySettings = 0x12ffd50;
		constexpr auto UpdateRenderSettings = 0x1300460;
		constexpr auto UpdateShaderKeywords = 0x1300a30;
		constexpr auto UpdateShaderProperties = 0x1300c90;
		constexpr auto ShaderScale = 0x12fc580;
		constexpr auto ShaderMiePhase = 0x12fc260;
		constexpr auto ShaderRayleighPhase = 0x12fc560;
		constexpr auto ShaderNightSkyColor = 0x12fc470;
		constexpr auto ShaderMoonHaloColor = 0x12fc330;
		constexpr auto TOD_HDR2LDR = 0x12fd1d0;
		constexpr auto TOD_GAMMA2LINEAR = 0x12fd170;
		constexpr auto TOD_LINEAR2GAMMA = 0x12fd350;
		constexpr auto ShaderScatteringColor = 0x12fc630;
		constexpr auto Initialize = 0x12f9fb0;
		constexpr auto Cleanup = 0x12f9e80;
		constexpr auto OnEnable = 0x12fa6c0;
		constexpr auto OnDisable = 0x12f9e80;
		constexpr auto LateUpdate = 0x12fa0b0;
		constexpr auto OnValidate = 0x12fa6d0;
		constexpr auto UpdateScattering = 0x1300880;
		constexpr auto UpdateCelestials = 0x12fd8c0;
		constexpr auto ctor = 0x1301c20;
		constexpr auto cctor = 0x1301b60;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1b73590;
		constexpr auto get_state = 0x1b73860;
		constexpr auto set_state = 0x1b73910;
		constexpr auto Range = 0x1b73610;
		constexpr auto RandomRangeInt = 0x1b735d0;
		constexpr auto get_value = 0x1b738a0;
		constexpr auto get_insideUnitSphere = 0x1b736e0;
		constexpr auto GetRandomUnitCircle = 0x1b73550;
		constexpr auto get_insideUnitCircle = 0x1b73660;
		constexpr auto get_onUnitSphere = 0x1b73760;
		constexpr auto get_rotation = 0x1b737e0;
		constexpr auto RandomRange = 0x1b735d0;
		constexpr auto ColorHSV = 0x1b73390;
		constexpr auto get_state_Injected = 0x1b73820;
		constexpr auto set_state_Injected = 0x1b738d0;
		constexpr auto get_insideUnitSphere_Injected = 0x1b736a0;
		constexpr auto get_onUnitSphere_Injected = 0x1b73720;
		constexpr auto get_rotation_Injected = 0x1b737a0;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x32ca80;
		constexpr auto GetHashCode = 0x145560;
		constexpr auto Equals = 0x32c540;
		constexpr auto Raycast = 0x32c810;
		constexpr auto Internal_RaycastTest = 0x2515b30;
		constexpr auto Internal_Raycast = 0x2515c10;
		constexpr auto Internal_RaycastNonAlloc = 0x2515a50;
		constexpr auto Query_CapsuleCast = 0x2516340;
		constexpr auto Internal_CapsuleCast = 0x2515830;
		constexpr auto CapsuleCast = 0x32c490;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2515790;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x2516060;
		constexpr auto OverlapCapsule = 0x32c670;
		constexpr auto Query_SphereCast = 0x2516450;
		constexpr auto Internal_SphereCast = 0x2515d80;
		constexpr auto SphereCast = 0x32c900;
		constexpr auto Internal_SphereCastNonAlloc = 0x2515cf0;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x2516150;
		constexpr auto OverlapSphere = 0x32c710;
		constexpr auto Query_BoxCast = 0x2516230;
		constexpr auto Internal_BoxCast = 0x2515560;
		constexpr auto BoxCast = 0x32c2a0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2515f70;
		constexpr auto OverlapBox = 0x32c5c0;
		constexpr auto Internal_RaycastTest_Injected = 0x2515ac0;
		constexpr auto Internal_Raycast_Injected = 0x2515ba0;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x25159e0;
		constexpr auto Query_CapsuleCast_Injected = 0x25162d0;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x2515720;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2515ff0;
		constexpr auto Query_SphereCast_Injected = 0x25163e0;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2515c80;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x25160e0;
		constexpr auto Query_BoxCast_Injected = 0x25161c0;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2515f00;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0xb58fe0;
		constexpr auto IsOnLayer = 0xb58e90;
		constexpr auto GetEntityFromRegistry = 0xb58d60;
		constexpr auto GetEntityFromComponent = 0xb58c60;
		constexpr auto SetHierarchyGroup = 0xb58f20;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x240;
		constexpr auto rotorPivot = 0x248;
		constexpr auto mainRotor = 0x250;
		constexpr auto mainRotor_blades = 0x258;
		constexpr auto mainRotor_blur = 0x260;
		constexpr auto tailRotor = 0x268;
		constexpr auto tailRotor_blades = 0x270;
		constexpr auto tailRotor_blur = 0x278;
		constexpr auto rocket_tube_left = 0x280;
		constexpr auto rocket_tube_right = 0x288;
		constexpr auto left_gun_yaw = 0x290;
		constexpr auto left_gun_pitch = 0x298;
		constexpr auto left_gun_muzzle = 0x2a0;
		constexpr auto right_gun_yaw = 0x2a8;
		constexpr auto right_gun_pitch = 0x2b0;
		constexpr auto right_gun_muzzle = 0x2b8;
		constexpr auto spotlight_rotation = 0x2c0;
		constexpr auto rocket_fire_effect = 0x2c8;
		constexpr auto gun_fire_effect = 0x2d0;
		constexpr auto bulletEffect = 0x2d8;
		constexpr auto explosionEffect = 0x2e0;
		constexpr auto fireBall = 0x2e8;
		constexpr auto crateToDrop = 0x2f0;
		constexpr auto maxCratesToSpawn = 0x2f8;
		constexpr auto bulletSpeed = 0x2fc;
		constexpr auto bulletDamage = 0x300;
		constexpr auto servergibs = 0x308;
		constexpr auto debrisFieldMarker = 0x310;
		constexpr auto rotorWashSoundDef = 0x318;
		constexpr auto _rotorWashSound = 0x320;
		constexpr auto flightEngineSoundDef = 0x328;
		constexpr auto flightThwopsSoundDef = 0x330;
		constexpr auto flightEngineSound = 0x338;
		constexpr auto flightThwopsSound = 0x340;
		constexpr auto flightEngineGainMod = 0x348;
		constexpr auto flightThwopsGainMod = 0x350;
		constexpr auto rotorGainModSmoothing = 0x358;
		constexpr auto engineGainMin = 0x35c;
		constexpr auto engineGainMax = 0x360;
		constexpr auto thwopGainMin = 0x364;
		constexpr auto thwopGainMax = 0x368;
		constexpr auto spotlightJitterAmount = 0x36c;
		constexpr auto spotlightJitterSpeed = 0x370;
		constexpr auto nightLights = 0x378;
		constexpr auto spotlightTarget = 0x380;
		constexpr auto engineSpeed = 0x38c;
		constexpr auto targetEngineSpeed = 0x390;
		constexpr auto blur_rotationScale = 0x394;
		constexpr auto _rotorWashParticles = 0x398;
		constexpr auto myAI = 0x3a0;
		constexpr auto mapMarkerEntityPrefab = 0x3a8;
		constexpr auto client_rotorPivotIdeal = 0x3b0;
		constexpr auto nightLightsOn = 0x3c0;

		constexpr auto OnRpcMessage = 0xaf2480;
		constexpr auto InitalizeWeakspots = 0xaf1ee0;
		constexpr auto MaxVelocity = 0x66b5b0;
		constexpr auto InitShared = 0xaf1e50;
		constexpr auto Load = 0xaf21c0;
		constexpr auto ClientInit = 0xaf1870;
		constexpr auto InitializeClientsideEffects = 0xaf1f60;
		constexpr auto DoClientDestroy = 0xaf1890;
		constexpr auto SetLights = 0xaf28d0;
		constexpr auto Update = 0xaf3340;
		constexpr auto UpdateEffects = 0xaf29f0;
		constexpr auto UpdateRotorWashPosition = 0xaf3200;
		constexpr auto ToggleRotorWash = 0xaf2970;
		constexpr auto UpdateRotorVisibility = 0xaf3170;
		constexpr auto FireGun = 0xaf1970;
		constexpr auto ctor = 0xaf3aa0;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x80c920;
		constexpr auto get_InitiatorPlayer = 0x80d170;
		constexpr auto get_attackNormal = 0x80d200;
		constexpr auto get_hasDamage = 0x80d700;
		constexpr auto ctor = 0x80cf90;
		constexpr auto LoadFromAttack = 0x80c930;
		constexpr auto get_isHeadshot = 0x80d730;
		constexpr auto get_bonePhrase = 0x80d5a0;
		constexpr auto get_boneName = 0x80d410;
		constexpr auto get_boneArea = 0x80d300;
		constexpr auto PositionOnRay = 0x80cb30;
		constexpr auto HitPositionOnRay = 0x80c6f0;
		constexpr auto IsNaNOrInfinity = 0x80c740;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x186d860;
		constexpr auto NumberBufferToDouble = 0x186d870;
		constexpr auto FormatDecimal = 0x186cd80;
		constexpr auto FormatDouble = 0x186cea0;
		constexpr auto FormatInt32 = 0x186cf20;
		constexpr auto FormatUInt32 = 0x186d280;
		constexpr auto FormatInt64 = 0x186d090;
		constexpr auto FormatUInt64 = 0x186d3e0;
		constexpr auto FormatSingle = 0x186d200;
		constexpr auto HexNumberToInt32 = 0x186d540;
		constexpr auto HexNumberToInt64 = 0x186d5c0;
		constexpr auto HexNumberToUInt32 = 0x186d680;
		constexpr auto HexNumberToUInt64 = 0x186d700;
		constexpr auto IsWhite = 0x186d790;
		constexpr auto NumberToInt32 = 0x186d880;
		constexpr auto NumberToInt64 = 0x186d8e0;
		constexpr auto NumberToUInt32 = 0x186d960;
		constexpr auto NumberToUInt64 = 0x186d9c0;
		constexpr auto MatchChars = 0x186d7f0;
		constexpr auto ParseDecimal = 0x186da30;
		constexpr auto ParseDouble = 0x186dba0;
		constexpr auto ParseInt32 = 0x186de50;
		constexpr auto ParseInt64 = 0x186e0a0;
		constexpr auto ParseNumber = 0x186e310;
		constexpr auto ParseSingle = 0x186ee00;
		constexpr auto ParseUInt32 = 0x186f120;
		constexpr auto ParseUInt64 = 0x186f360;
		constexpr auto StringToNumber = 0x186f5c0;
		constexpr auto TrailingZeros = 0x186f700;
		constexpr auto TryParseDecimal = 0x186f760;
		constexpr auto TryParseDouble = 0x186f8e0;
		constexpr auto TryParseInt32 = 0x186fa60;
		constexpr auto TryParseInt64 = 0x186fca0;
		constexpr auto TryParseSingle = 0x186fe70;
		constexpr auto TryParseUInt32 = 0x1870020;
		constexpr auto TryParseUInt64 = 0x1870260;
		constexpr auto TryStringToNumber = 0x1870580;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x14f7750;
		constexpr auto OnSerializing = 0x14f6db0;
		constexpr auto OnDeserializing = 0x45c510;
		constexpr auto OnDeserialized = 0x45c510;
		constexpr auto get_InvariantInfo = 0x14f78e0;
		constexpr auto GetInstance = 0x14f6b30;
		constexpr auto Clone = 0x14f6a30;
		constexpr auto get_CurrencyDecimalDigits = 0x3ed610;
		constexpr auto get_CurrencyDecimalSeparator = 0x5c9170;
		constexpr auto get_IsReadOnly = 0xf26540;
		constexpr auto get_CurrencyGroupSizes = 0x14f7760;
		constexpr auto get_NumberGroupSizes = 0x14f79f0;
		constexpr auto get_PercentGroupSizes = 0x14f7a70;
		constexpr auto get_CurrencyGroupSeparator = 0x6d0ea0;
		constexpr auto get_CurrencySymbol = 0x5c9160;
		constexpr auto get_CurrentInfo = 0x14f77e0;
		constexpr auto get_NaNSymbol = 0x681570;
		constexpr auto get_CurrencyNegativePattern = 0x12f9090;
		constexpr auto get_NumberNegativePattern = 0x12f9080;
		constexpr auto get_PercentPositivePattern = 0x12f9070;
		constexpr auto get_PercentNegativePattern = 0xbf2f10;
		constexpr auto get_NegativeInfinitySymbol = 0x645960;
		constexpr auto get_NegativeSign = 0x5a3a50;
		constexpr auto get_NumberDecimalDigits = 0xafec20;
		constexpr auto get_NumberDecimalSeparator = 0x6d0e00;
		constexpr auto get_NumberGroupSeparator = 0x5b4160;
		constexpr auto get_CurrencyPositivePattern = 0x12f9060;
		constexpr auto get_PositiveInfinitySymbol = 0x681580;
		constexpr auto get_PositiveSign = 0x915340;
		constexpr auto get_PercentDecimalDigits = 0xbf2f30;
		constexpr auto get_PercentDecimalSeparator = 0x681590;
		constexpr auto get_PercentGroupSeparator = 0x681510;
		constexpr auto get_PercentSymbol = 0x6414c0;
		constexpr auto get_PerMilleSymbol = 0x681520;
		constexpr auto GetFormat = 0x14f6aa0;
		constexpr auto ReadOnly = 0x14f6e40;
		constexpr auto ValidateParseStyleInteger = 0x14f6fc0;
		constexpr auto ValidateParseStyleFloatingPoint = 0x14f6ef0;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x1ac2780;
		constexpr auto Vertex = 0x1ac27e0;
		constexpr auto TexCoord3 = 0x1ac2720;
		constexpr auto TexCoord2 = 0x1ac26d0;
		constexpr auto MultiTexCoord3 = 0x1ac2600;
		constexpr auto MultiTexCoord2 = 0x1ac25a0;
		constexpr auto ImmediateColor = 0x1ac22e0;
		constexpr auto Color = 0x1ac1fb0;
		constexpr auto get_sRGBWrite = 0x1ac2840;
		constexpr auto set_sRGBWrite = 0x1ac2870;
		constexpr auto Flush = 0x1ac2040;
		constexpr auto MultMatrix = 0x1ac2560;
		constexpr auto PushMatrix = 0x1ac26a0;
		constexpr auto PopMatrix = 0x1ac2670;
		constexpr auto LoadIdentity = 0x1ac2410;
		constexpr auto LoadOrtho = 0x1ac2440;
		constexpr auto LoadPixelMatrix = 0x1ac2470;
		constexpr auto LoadProjectionMatrix = 0x1ac24e0;
		constexpr auto GetGPUProjectionMatrix = 0x1ac2270;
		constexpr auto GLLoadPixelMatrixScript = 0x1ac2190;
		constexpr auto GLIssuePluginEvent = 0x1ac2150;
		constexpr auto IssuePluginEvent = 0x1ac2360;
		constexpr auto Begin = 0x1ac1ec0;
		constexpr auto End = 0x1ac2010;
		constexpr auto GLClear = 0x1ac20e0;
		constexpr auto Clear = 0x1ac1f50;
		constexpr auto ClearWithSkybox = 0x1ac1f00;
		constexpr auto MultMatrix_Injected = 0x1ac2520;
		constexpr auto LoadProjectionMatrix_Injected = 0x1ac24a0;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1ac2210;
		constexpr auto GLClear_Injected = 0x1ac2070;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1b5fb70;
		constexpr auto CreateWithMaterial = 0x1b5fb20;
		constexpr auto CreateWithString = 0x1b5fbc0;
		constexpr auto ctor = 0x1b61120;
		constexpr auto get_shader = 0x1b613e0;
		constexpr auto set_shader = 0x1b61570;
		constexpr auto get_color = 0x1b611b0;
		constexpr auto set_color = 0x1b61420;
		constexpr auto get_mainTexture = 0x1b612c0;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1b5fe90;
		constexpr auto HasProperty = 0x1b603a0;
		constexpr auto get_renderQueue = 0x1b613a0;
		constexpr auto set_renderQueue = 0x1b61530;
		constexpr auto EnableKeyword = 0x1b5fc50;
		constexpr auto DisableKeyword = 0x1b5fc00;
		constexpr auto IsKeywordEnabled = 0x1b603e0;
		constexpr auto get_enableInstancing = 0x1b61280;
		constexpr auto set_enableInstancing = 0x1b614e0;
		constexpr auto get_passCount = 0x1b61360;
		constexpr auto GetShaderPassEnabled = 0x1b5ffe0;
		constexpr auto GetPassName = 0x1b5ff60;
		constexpr auto FindPass = 0x1b5fca0;
		constexpr auto SetOverrideTag = 0x1b60b70;
		constexpr auto GetTagImpl = 0x1b60030;
		constexpr auto GetTag = 0x1b60130;
		constexpr auto SetPass = 0x1b60bd0;
		constexpr auto CopyPropertiesFromMaterial = 0x1b5fad0;
		constexpr auto GetShaderKeywords = 0x1b5ffa0;
		constexpr auto SetShaderKeywords = 0x1b60c10;
		constexpr auto get_shaderKeywords = 0x1b5ffa0;
		constexpr auto set_shaderKeywords = 0x1b60c10;
		constexpr auto SetFloatImpl = 0x1b608c0;
		constexpr auto SetColorImpl = 0x1b60530;
		constexpr auto SetMatrixImpl = 0x1b60a30;
		constexpr auto SetTextureImpl = 0x1b60c60;
		constexpr auto SetBufferImpl = 0x1b60430;
		constexpr auto GetFloatImpl = 0x1b5fed0;
		constexpr auto GetColorImpl = 0x1b5fd40;
		constexpr auto GetTextureImpl = 0x1b601a0;
		constexpr auto SetFloatArrayImpl = 0x1b60630;
		constexpr auto SetTextureOffsetImpl = 0x1b60d00;
		constexpr auto SetTextureScaleImpl = 0x1b60e00;
		constexpr auto SetFloatArray = 0x1b60790;
		constexpr auto SetFloat = 0x1b60910;
		constexpr auto SetInt = 0x1b60970;
		constexpr auto SetColor = 0x1b605d0;
		constexpr auto SetVector = 0x1b60f10;
		constexpr auto SetMatrix = 0x1b60af0;
		constexpr auto SetTexture = 0x1b60eb0;
		constexpr auto SetBuffer = 0x1b60480;
		constexpr auto GetFloat = 0x1b5ff10;
		constexpr auto GetColor = 0x1b5fe10;
		constexpr auto GetVector = 0x1b60230;
		constexpr auto GetTexture = 0x1b601e0;
		constexpr auto SetTextureOffset = 0x1b60d50;
		constexpr auto SetTextureScale = 0x1b60e50;
		constexpr auto SetColorImpl_Injected = 0x1b604e0;
		constexpr auto SetMatrixImpl_Injected = 0x1b609e0;
		constexpr auto GetColorImpl_Injected = 0x1b5fcf0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1b60cb0;
		constexpr auto SetTextureScaleImpl_Injected = 0x1b60db0;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x1bf8020;
		constexpr auto get_height = 0x1bf7fc0;
		constexpr auto get_dpi = 0x1bf7f60;
		constexpr auto get_currentResolution = 0x1bf7f20;
		constexpr auto get_fullScreen = 0x1bf7f90;
		constexpr auto SetResolution = 0x1bf7e20;
		constexpr auto get_resolutions = 0x1bf7ff0;
		constexpr auto get_currentResolution_Injected = 0x1bf7ee0;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x12f3b70;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x12f78d0;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x12f5000;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x12f7910;
	};

}


